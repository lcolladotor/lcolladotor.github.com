<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rstats on L. Collado-Torres</title>
    <link>http://lcolladotor.github.io/categories/rstats/</link>
    <description>Recent content in Rstats on L. Collado-Torres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2011-2018 Leonardo Collado Torres under (CC) BY-NC-SA 4.0. All thoughts and opinions here are my own.</copyright>
    <lastBuildDate>Thu, 08 Mar 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://lcolladotor.github.io/categories/rstats/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>blogdown archetype (template)</title>
      <link>http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/</guid>
      <description>&lt;p&gt;In a recent blog post I &lt;a href=&#34;http://lcolladotor.github.io/2018/02/17/r-markdown-blog-template/#.WqDOdpPwa50&#34;&gt;wrote about having a template&lt;/a&gt; for &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; posts. I wanted to know if it was possible to do this and make my life (and others hopefully) easier for writing new blog posts that are ready to go with the features I frequently re-use.&lt;/p&gt;
&lt;p&gt;In my case, I like using &lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;) for functions such as &lt;code&gt;CRANpkg()&lt;/code&gt;, &lt;code&gt;Biocpkg()&lt;/code&gt; and &lt;code&gt;Githubpkg()&lt;/code&gt;. I also like using &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;) for citing with &lt;code&gt;citep()&lt;/code&gt; packages or papers; I use &lt;code&gt;citation()&lt;/code&gt; and &lt;code&gt;bib_metadata()&lt;/code&gt; to get the necessary information, respectively. Furthermore, I prefer &lt;code&gt;devtools::session_info()&lt;/code&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;) over &lt;code&gt;sessionInfo()&lt;/code&gt; since it provides information of where you got the package, which becomes specially relevant when using packages from GitHub. Finally, I like thanking the creators of the tools I use, which in this case is &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I also like reminding myself how to do some common tasks. Basically, the equivalent of the new R Markdown file you get when using RStudio. In my case, I want to remind myself of the YAML options I frequently use (toc, fig height and width) or how to add screenshots.&lt;/p&gt;
&lt;p&gt;My &lt;a href=&#34;http://lcolladotor.github.io/2018/02/17/r-markdown-blog-template/#.WqDOdpPwa50&#34;&gt;first post&lt;/a&gt; on this topic is actually rather messy. That’s because at that time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I didn’t know about &lt;a href=&#34;https://gohugo.io/content-management/archetypes/&#34;&gt;hugo archetypes&lt;/a&gt; which are &lt;em&gt;template&lt;/em&gt; files,&lt;/li&gt;
&lt;li&gt;I hadn’t even thought of making the &lt;a href=&#34;http://lcolladotor.github.io/2018/03/07/blogdown-insert-image-addin/#.WqDRmpPwa50&#34;&gt;Insert Image addin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I went down the rabbit hole of archetypes and &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;, reported an &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/261&#34;&gt;issue resulated to this topic&lt;/a&gt; that was in the way of using archetypes for &lt;code&gt;.Rmd&lt;/code&gt; posts. After some encouragement by Yihui Xie, I ended up fixing this issues in &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/263&#34;&gt;my first pull request&lt;/a&gt; &lt;em&gt;ever&lt;/em&gt; to an RStudio package. The PR also added the &lt;code&gt;Archetype&lt;/code&gt; option to the &lt;em&gt;New Post&lt;/em&gt; RStudio addin (which I used right now ^^).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-08-blogdown-archetype-template_files/Screen Shot 2018-03-08 at 1.05.13 AM.png&#34; alt=&#34;new post addin with archetype option&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;div id=&#34;creating-my-blogdown-archetype-template&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating my &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; archetype (template)&lt;/h3&gt;
&lt;p&gt;To make my archetype (template) for blog posts I looked at the GitHub repo for the theme I’m using. It contains an &lt;code&gt;archetypes&lt;/code&gt; directory with several files. I just looked at the one called &lt;code&gt;post.md&lt;/code&gt; (check it &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/archetypes/post.md&#34;&gt;here&lt;/a&gt;) and copied it from &lt;code&gt;themes/hugo-academic/archetypes/post.md&lt;/code&gt; to &lt;code&gt;archetypes/post.md&lt;/code&gt;. Next I added my favorite R code below the last &lt;code&gt;+++&lt;/code&gt; mark. You can check out the final version &lt;a href=&#34;https://github.com/lcolladotor/hugoblog/blob/master/archetypes/post.md&#34;&gt;here&lt;/a&gt;. Below I display the version at the time of writing this blog post (I’m using a &lt;code&gt;.txt&lt;/code&gt; extension otherwise the embedded gist doesn’t look good, but you want it to end in &lt;code&gt;.md&lt;/code&gt;).&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/lcolladotor/c3e141e033306299d0946a76e71f2967.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;I couldn’t get the archetype to respect some of the YAML that &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; adds, but well, that’s a single copy-paste I have to do now (if I actually decide to use the custom YAML options which are only for &lt;code&gt;.Rmd&lt;/code&gt; posts).&lt;/p&gt;
&lt;p&gt;I encourage you to make your own &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; archetype (template). At least it should remind you to include reproducibility information which matters whenever any R code is involved.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yihui Xie also talked about my first PR in &lt;a href=&#34;https://yihui.name/en/2018/02/bite-sized-pull-requests/&#34;&gt;his blog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                    
##  base          * 3.4.3   2017-12-07 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                    
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                      
##  blogdown        0.5.9   2018-03-08 Github (rstudio/blogdown@dc1f41c) 
##  bookdown        0.7     2018-02-18 cran (@0.7)                       
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)
##  compiler        3.4.3   2017-12-07 local                             
##  datasets      * 3.4.3   2017-12-07 local                             
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                    
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                    
##  graphics      * 3.4.3   2017-12-07 local                             
##  grDevices     * 3.4.3   2017-12-07 local                             
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                    
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                    
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                    
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                    
##  methods       * 3.4.3   2017-12-07 local                             
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                    
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                    
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                    
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                    
##  stats         * 3.4.3   2017-12-07 local                             
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                    
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                     
##  tools           3.4.3   2017-12-07 local                             
##  utils         * 3.4.3   2017-12-07 local                             
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                    
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                    
##  yaml            2.1.17  2018-02-27 cran (@2.1.17)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown Insert Image addin</title>
      <link>http://lcolladotor.github.io/2018/03/07/blogdown-insert-image-addin/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2018/03/07/blogdown-insert-image-addin/</guid>
      <description>&lt;p&gt;Have you ever tried inserting an image into a &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; post? Maybe you have, or maybe you tried and gave up. Lets first review the &lt;em&gt;hard&lt;/em&gt; way before getting to the solution I contributed.&lt;/p&gt;
&lt;div id=&#34;the-hard-way&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The &lt;em&gt;hard&lt;/em&gt; way&lt;/h3&gt;
&lt;p&gt;The process involves copying the target image to the static directory that corresponds to the &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; post. Lets say that your post is called &lt;code&gt;2018-03-07-my-new-post.Rmd&lt;/code&gt; and lives at &lt;code&gt;content/post/&lt;/code&gt;, so it’s full path is &lt;code&gt;content/post/2018-03-07-my-new-post.Rmd&lt;/code&gt;. When you run the RStudio &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin &lt;em&gt;Serve Site&lt;/em&gt;, behind curtains the directory &lt;code&gt;static/post/2018-03-07-my-new-post_files&lt;/code&gt; is created and inside it you can find the images made by your R code: likely at &lt;code&gt;static/post/2018-03-07-my-new-post_files/figure_html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So far everything is working! But now you want to add a screenshot or some other image to your blog post. Lets say that your image is &lt;code&gt;~/Desktop/screenshot.jpg&lt;/code&gt;. Your &lt;code&gt;~/Desktop&lt;/code&gt; directory is not part of your &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; directory and well, simply put, your website won’t find the image. We need to put it in a location that will be made public by &lt;code&gt;hugo&lt;/code&gt;. That is, we need to put it inside &lt;code&gt;static/post/2018-03-07-my-new-post_files&lt;/code&gt; (or anywhere inside &lt;code&gt;static&lt;/code&gt;, but we like to keep things tidy!).&lt;/p&gt;
&lt;p&gt;Ok, so we copy our screenshot file &lt;code&gt;~/Desktop/screenshot.jpg&lt;/code&gt; and save it as &lt;code&gt;static/post/2018-03-07-my-new-post_files/screenshot.jpg&lt;/code&gt;. The next time we render our site and publish it, the figure will be available in the web. But it’s still not part of our &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; post.&lt;/p&gt;
&lt;p&gt;So we need to use either the Markdown or HTML syntax for adding the image. Maybe your initial thought is to use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](screenshot.jpg)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Except that &lt;strong&gt;will not&lt;/strong&gt; work. We need to use almost all the path (just remove &lt;code&gt;static&lt;/code&gt;) as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](/post/2018-03-07-my-new-post_files/screenshot.jpg)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to edit the height or width, then you need to use the HTML syntax. Something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;img alt = &amp;#39;my new screenshot&amp;#39; width=&amp;#39;200&amp;#39; src=&amp;#39;/post/2018-03-07-my-new-post_files/screenshot.jpg&amp;#39; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;hard-way-notes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;em&gt;hard way&lt;/em&gt; notes&lt;/h4&gt;
&lt;p&gt;You could have also used &lt;code&gt;knitr::include_graphics()&lt;/code&gt; and let &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; copy it to the final location in &lt;code&gt;static&lt;/code&gt; and link to it appropriately. However, you would have to keep your original images organized in a way that won’t bother &lt;code&gt;hugo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Another option that I used for a while, even in the days when my blog was based on Jekyll, is to render the figures yourself and copy the directory with the figures, plus mess around with how they are linked from R. Details &lt;a href=&#34;https://github.com/lcolladotor/markdown-redcarpet.tmbundle/commit/f043c056ff620299843e9d8ea34144f478aa7965&#34;&gt;here&lt;/a&gt;. Not something I recommend doing now.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;insert-image-addin-aka-the-easy-way&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;em&gt;Insert Image&lt;/em&gt; addin: aka, the &lt;em&gt;easy&lt;/em&gt; way&lt;/h3&gt;
&lt;p&gt;If you are using &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;, you most likely (you &lt;em&gt;should&lt;/em&gt; if you can) are using &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio&lt;/a&gt; and the great &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addins: &lt;em&gt;New Post&lt;/em&gt; and &lt;em&gt;Serve Site&lt;/em&gt;. I just recently started using them in the past few days and looking at the code I realized that it should be possible to make an addin that lets you:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;select a target image,&lt;/li&gt;
&lt;li&gt;copies the target image to the appropriate location under &lt;code&gt;static&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;gives you the correct code for linking the image.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yihui Xie &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/269&#34;&gt;loved the idea&lt;/a&gt; (I think it’s fair to say that ^^) and helped me polish it in the &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/272&#34;&gt;pull request&lt;/a&gt; that implements it. He then refined the code even &lt;a href=&#34;https://github.com/rstudio/blogdown/commit/7355a94edc62dd9ffe3792c1103f1536b9c67406&#34;&gt;more&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;features-of-the-insert-image-addin&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Features of the &lt;em&gt;Insert Image&lt;/em&gt; addin&lt;/h3&gt;
&lt;p&gt;The final features, at least as implemented in &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; version 0.5.7 are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select an image from anywhere in your computer.&lt;/li&gt;
&lt;li&gt;Automatically generate a candidate final location for your image under &lt;code&gt;static&lt;/code&gt;, which you can edit. Useful if you want to rename the final figure.&lt;/li&gt;
&lt;li&gt;Allow specifying the alternate description of the image (&lt;code&gt;alt&lt;/code&gt;), height and width.&lt;/li&gt;
&lt;li&gt;If the target image file exists, a dynamic menu shows up that asks you whether to overwrite it or not.&lt;/li&gt;
&lt;li&gt;The final syntax is Markdown unless a width or height are used, in which case it uses HTML code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yihui Xie &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/272&#34;&gt;hinted&lt;/a&gt; at other possible future features, which maybe you can help implement.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;using-the-insert-image-addin&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Using the &lt;em&gt;Insert Image&lt;/em&gt; addin&lt;/h3&gt;
&lt;div id=&#34;step-1-install-appropriate-blogdown-version&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Step 1: install appropriate &lt;em&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; version&lt;/h4&gt;
&lt;p&gt;First of all, at the time of writing this post, you need the development version of &lt;em&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;. You can install it with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Check if you have version 0.5.7 or newer
## I actually used version 0.5.9 for this blog post
packageVersion(&amp;#39;blogdown&amp;#39;)

## If not, then get it!
##### If necessary:
## install.packages(&amp;#39;devtools&amp;#39;)
devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You also need an up to date version of &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio&lt;/a&gt; and I recommend also using &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;R 3.4.x&lt;/a&gt; (or newer if you are reading this in the future). Re-start RStudio so it loads the new version of &lt;em&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-open-the-insert-image-addin&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Step 2: open the &lt;em&gt;Insert Image&lt;/em&gt; addin&lt;/h4&gt;
&lt;p&gt;Second, go to the &lt;em&gt;Addins&lt;/em&gt; menu in the top section of the RStudio window and select the &lt;em&gt;Insert Image&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-07 at 11.47.37 PM.png&#34; alt=&#34;insert image addin screenshot&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-choose-figure-and-inputs&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Step 3: choose figure and inputs&lt;/h4&gt;
&lt;p&gt;So far the &lt;em&gt;Insert Image&lt;/em&gt; addin looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-07 at 11.58.44 PM.png&#34; alt=&#34;addin without input&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;So lets go head and select an image we want to upload. In my case, I chose an image that already exists.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-08 at 12.00.01 AM.png&#34; alt=&#34;&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;You can rename the figure if you want, and if it doesn’t exist, the &lt;em&gt;overwrite&lt;/em&gt; option goes away.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-08 at 12.01.06 AM.png&#34; alt=&#34;modified image file&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4-hit-done&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Step 4: hit done!&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-08 at 12.02.28 AM.png&#34; alt=&#34;hit go&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Lets go ahead and click &lt;code&gt;done&lt;/code&gt;! Our text window in RStudio will insert the appropriate code for linking the image. In this case, it’s the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;/post/2018-03-07-blogdown-insert-image-addin_files/screenshot.png&amp;quot; alt=&amp;quot;final image&amp;quot; width=&amp;quot;400&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is the image:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/screenshot.png&#34; alt=&#34;final image&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;optional-step-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Optional step 5&lt;/h4&gt;
&lt;p&gt;Now use the &lt;em&gt;Serve Site&lt;/em&gt; addin and check if you like your images. You might want to change the height/widths or alternate text. You could also wrap the HTML/Markdown code around it for linking to a website.&lt;/p&gt;
&lt;p&gt;You can also delete your original images, if for example, they are cluttering your &lt;code&gt;~/Desktop&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;I hope that you will find this new addin as useful as I’m finding it, or even more. Plus hopefully this blog post gives you an idea of the difficulties before this addin existed. Also, I want to thank Yihui Xie for guiding me, I’ve learnt quite a bit recently. Though I will still use &lt;code&gt;&amp;lt;-&lt;/code&gt; assignment operator for my own code hehe.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;as well as Yihui Xie’s help and encouragement in the &lt;a href=&#34;https://yihui.name/en/2018/02/bite-sized-pull-requests/&#34;&gt;form of a signed sticker&lt;/a&gt; and the &lt;em&gt;Great Hacker&lt;/em&gt; title ^^. He also wrote &lt;a href=&#34;https://yihui.name/en/2018/03/second-pull-request/&#34;&gt;a blog post&lt;/a&gt; about the &lt;em&gt;Insert Image&lt;/em&gt; addin.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-03-07-blogdown-insert-image-addin_files/Screen Shot 2018-03-08 at 12.12.07 AM.png&#34; alt=&#34;great hacker signed sticker&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                    
##  base          * 3.4.3   2017-12-07 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                    
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                      
##  blogdown        0.5.9   2018-03-08 Github (rstudio/blogdown@dc1f41c) 
##  bookdown        0.7     2018-02-18 cran (@0.7)                       
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)
##  compiler        3.4.3   2017-12-07 local                             
##  datasets      * 3.4.3   2017-12-07 local                             
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                    
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                    
##  graphics      * 3.4.3   2017-12-07 local                             
##  grDevices     * 3.4.3   2017-12-07 local                             
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                    
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                    
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                    
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                    
##  methods       * 3.4.3   2017-12-07 local                             
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                    
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                    
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                    
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                    
##  stats         * 3.4.3   2017-12-07 local                             
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                    
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                     
##  tools           3.4.3   2017-12-07 local                             
##  utils         * 3.4.3   2017-12-07 local                             
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                    
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                    
##  yaml            2.1.17  2018-02-27 cran (@2.1.17)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R markdown blog template</title>
      <link>http://lcolladotor.github.io/2018/02/17/r-markdown-blog-template/</link>
      <pubDate>Sat, 17 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2018/02/17/r-markdown-blog-template/</guid>
      <description>&lt;p&gt;This blog post is mostly for myself but maybe it’s useful to others. It contains my current R markdown blog template. I initially posted this as a question at &lt;a href=&#34;https://stackoverflow.com/questions/48844340/is-it-possible-to-create-a-rmd-file-template-for-the-blogdown-new-post-addin&#34;&gt;StackOverflow&lt;/a&gt;. Then I read how much a burden we put in &lt;a href=&#34;https://yihui.name/en/2018/02/career-crisis/&#34;&gt;Yihui Xie&lt;/a&gt; and decided that my current setup (copy-pasting) works just fine. In any case using &lt;code&gt;blogdown&lt;/code&gt; with the RStudio IDE is much simpler than what I used to do in the past with &lt;a href=&#34;http://lcolladotor.github.io/2013/11/09/new-Fellgernon-Bit-setup-in-Github/&#34;&gt;jekyll&lt;/a&gt; or with even my prior &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/42&#34;&gt;setup with blogdown&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;bibliography-setup&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Bibliography setup&lt;/h3&gt;
&lt;p&gt;First I define the citation information I’ll need. By the way, I used &lt;a href=&#34;https://yihui.name/knitr/faq/&#34;&gt;FAQ 7&lt;/a&gt; for showing the R code chunk.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ```{r bibsetup, echo=FALSE, message=FALSE, warning=FALSE}
    ## Load knitcitations with a clean bibliography
    library(&amp;#39;knitcitations&amp;#39;)
    cleanbib()
    cite_options(hyperlink = &amp;#39;to.doc&amp;#39;, citation_format = &amp;#39;text&amp;#39;, style = &amp;#39;html&amp;#39;)
    
    bib &amp;lt;- c(&amp;#39;knitcitations&amp;#39; = citation(&amp;#39;knitcitations&amp;#39;),
             &amp;#39;blogdown&amp;#39; = citation(&amp;#39;blogdown&amp;#39;)[2])
    ```&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;post-content&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Post content&lt;/h3&gt;
&lt;p&gt;This is where I typically start to edit since the bibliography chunk is hidden.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r-image&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R image&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    ```{r &amp;#39;plot&amp;#39;}
    ## This will create the /post/*_files/ directory
    ## where you can later copy the non-R images you want to use
    ## in the blog post
    plot(1:10, 10:1)
    ```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/post/2018-02-17-r-markdown-blog-template_files/figure-html/plot-1.png&#34; width=&#34;480&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that I modified the YAML portion of the post to set the figure width and height. You can also include a table of contents if you want, though it affects the summary of the post. Check the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/output-format.html&#34;&gt;output format&lt;/a&gt; section of the &lt;code&gt;blogdown&lt;/code&gt; book for more details &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;), including differences between &lt;code&gt;.Rmd&lt;/code&gt; and &lt;code&gt;.Rmarkdown&lt;/code&gt; files. Note that you can also use a &lt;code&gt;_output.yml&lt;/code&gt; file as described there.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  blogdown::html_page:
    toc: no
    fig_width: 5
    fig_height: 5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;custom-image-syntax&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Custom image syntax&lt;/h3&gt;
&lt;p&gt;Here I remind myself of different ways I can include external images. Check &lt;a href=&#34;https://github.com/rstudio/blogdown/issues/239&#34;&gt;blogdown issue 239&lt;/a&gt; for some background information.&lt;/p&gt;
&lt;p&gt;Markdown syntax for custom image:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](/post/2018-02-17-r-markdown-blog-template_files/LIBD.jpg)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://lcolladotor.github.io/post/2018-02-17-r-markdown-blog-template_files/LIBD.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;HTML syntax for centering image, including a link, and re-sizing the image to a fix width of 200 px.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;center&amp;gt;
&amp;lt;a href=&amp;quot;http://lcolladotor.github.io/&amp;quot;&amp;gt;&amp;lt;img alt = &amp;#39;some website&amp;#39; width=&amp;#39;200&amp;#39; src=&amp;#39;/post/2018-02-17-r-markdown-blog-template_files/LIBD.jpg&amp;#39; /&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/center&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;center&gt;
&lt;a href=&#34;http://lcolladotor.github.io/&#34;&gt;&lt;img alt = &#39;some website&#39; width=&#39;200&#39; src=&#39;http://lcolladotor.github.io/post/2018-02-17-r-markdown-blog-template_files/LIBD.jpg&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Reproducibility info
library(&amp;#39;devtools&amp;#39;)
options(width = 120)
session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                               
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                       
##  base          * 3.4.3   2017-12-07 local                                
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                       
##  blogdown        0.5.10  2018-03-10 Github (lcolladotor/blogdown@471b086)
##  bookdown        0.7     2018-02-18 cran (@0.7)                          
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)   
##  compiler        3.4.3   2017-12-07 local                                
##  datasets      * 3.4.3   2017-12-07 local                                
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                       
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                       
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                       
##  graphics      * 3.4.3   2017-12-07 local                                
##  grDevices     * 3.4.3   2017-12-07 local                                
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                       
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                       
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                       
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                       
##  knitr           1.20    2018-02-20 cran (@1.20)                         
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                       
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                       
##  methods       * 3.4.3   2017-12-07 local                                
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                       
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                       
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                       
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                       
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                          
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                       
##  stats         * 3.4.3   2017-12-07 local                                
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                       
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                        
##  tools           3.4.3   2017-12-07 local                                
##  utils         * 3.4.3   2017-12-07 local                                
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                       
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                       
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                       
##  yaml            2.1.18  2018-03-08 cran (@2.1.18)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;) and blog built using &lt;code&gt;blogdown&lt;/code&gt; (&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Chunk normaly with options:  results = &amp;#39;asis&amp;#39;, echo = FALSE, cache = FALSE
## Print bibliography
bibliography(style = &amp;#39;html&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Updating R</title>
      <link>http://lcolladotor.github.io/2017/05/04/Updating-R/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2017/05/04/Updating-R/</guid>
      <description>

&lt;p&gt;As you might know by now, the latest R version was recently released (R 3.4.0). That means that you are &lt;em&gt;highly&lt;/em&gt; encouraged to update your R installation. There are several ways to do this some of which are documented in these other blog posts: &lt;a href=&#34;https://www.r-statistics.com/2013/03/updating-r-from-r-on-windows-using-the-installr-package/&#34; target=&#34;_blank&#34;&gt;Tal Galili, 2013&lt;/a&gt;, &lt;a href=&#34;https://www.datascienceriot.com/how-to-upgrade-r-without-losing-your-packages/kris/&#34; target=&#34;_blank&#34;&gt;Kris Eberwein, 2015&lt;/a&gt;. You would think that it&#39;s just a matter of downloading the latest R installer for your OS, installing it, and continuing your analysis. The reality is a bit more complicated. The following short steps will make your life easier.&lt;/p&gt;

&lt;h2 id=&#34;save-your-list-of-currently-installed-packages&#34;&gt;Save your list of currently installed packages&lt;/h2&gt;

&lt;p&gt;If you want to continue using R with all the packages you previously had installed, the best way is to save the list of packages you currently have before installing a new R version. You can do so with these lines of code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Change accordingly
list_dir &amp;lt;- &#39;/Users/lcollado/Dropbox/Computing/R&#39;

## Get the list of installed packages
installed &amp;lt;- dir(.libPaths())

## Save the list for later use
save(installed, file = file.path(list_dir, paste0(Sys.Date(), &#39;-installed.Rdata&#39;)))

## Explore the list
head(installed)

## [1] &amp;quot;abind&amp;quot;   &amp;quot;acepack&amp;quot; &amp;quot;ada&amp;quot;     &amp;quot;AER&amp;quot;     &amp;quot;affy&amp;quot;    &amp;quot;affyio&amp;quot;

length(installed)

## [1] 611
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-latest-r&#34;&gt;Install latest R&lt;/h2&gt;

&lt;p&gt;Ok, now you have a list of installed packages. It&#39;s like a restore point. Next, you need to get the latest R installer for your OS from &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; and install the latest R. For example, for a Mac that would be &lt;a href=&#34;https://cran.r-project.org/bin/macosx/R-3.4.0.pkg&#34; target=&#34;_blank&#34;&gt;R-3.4.0.pkg&lt;/a&gt;. Install it as usual.&lt;/p&gt;

&lt;h2 id=&#34;restore-your-packages&#34;&gt;Restore your packages&lt;/h2&gt;

&lt;p&gt;By now you have a new R version installed but without all your favorite packages. So, how do you install them? You just need to open your latest list of installed packages and install them. Now, I&#39;m a Bioconductor user which means that some of my packages are not on CRAN. But the following code will work for you even if all the packages you use are from CRAN.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Change accordingly
list_dir &amp;lt;- &#39;/Users/lcollado/Dropbox/Computing/R&#39;

## Find the corresponding Rdata files
previous &amp;lt;- dir(path = list_dir, pattern = &#39;installed.Rdata&#39;)

## Load the latest one
load(file.path(list_dir, previous[length(previous)]))

## Just checking it
head(installed)

## [1] &amp;quot;abind&amp;quot;   &amp;quot;acepack&amp;quot; &amp;quot;ada&amp;quot;     &amp;quot;AER&amp;quot;     &amp;quot;affy&amp;quot;    &amp;quot;affyio&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, get the list of current R packages you have installed. Every new R installation comes with a few of them (the &lt;em&gt;base&lt;/em&gt; packages). You don&#39;t need to install those.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;current &amp;lt;- dir(.libPaths())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, install the missing packages&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## For Bioconductor and CRAN packages
source(&#39;http://bioconductor.org/biocLite.R&#39;)
biocLite(installed[!installed %in% current])


## Bioconductor version 3.6 (BiocInstaller 1.27.2), ?biocLite for help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and now you can continue on with your analysis 😄 You didn&#39;t even need to figure out the best order to install the packages!&lt;/p&gt;

&lt;h2 id=&#34;github-packages&#34;&gt;GitHub packages&lt;/h2&gt;

&lt;p&gt;Some of your favorite R packages might only exist via GitHub. This list is likely short since most packages get distributed via CRAN. But if that&#39;s the case, you can see which packages are missing by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Check which packages are missing
current_post_installation &amp;lt;- dir(.libPaths())
installed[!installed %in% current_post_installation]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example, in my case I use the &lt;a href=&#34;https://github.com/jalvesaq/colorout&#34; target=&#34;_blank&#34;&gt;colorout&lt;/a&gt; package which lives only in GitHub. I have to install that one manually:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;install.packages(&#39;devtools&#39;)
library(&#39;devtools&#39;)
install_github(&amp;quot;jalvesaq/colorout&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other times a package might not be compiling for the new R version or might no longer be supported (defunct).&lt;/p&gt;

&lt;h2 id=&#34;misc-for-bioconductor-developers&#34;&gt;Misc for Bioconductor developers&lt;/h2&gt;

&lt;p&gt;If you are a Bioconductor developer or are planning on becoming one, then you need 2 versions of R at all times. One R for the bioc-release branch and another one for the bioc-devel branch. Sometimes it&#39;s the same R version sometimes it&#39;s not depending on the month of the year. Right now, Bioc-release (3.5) uses R 3.4.0 and Bioc-devel (3.6) also uses R 3.4.0. &lt;a href=&#34;http://r.research.att.com/&#34; target=&#34;_blank&#34;&gt;R Switch&lt;/a&gt; for Mac users will be your friend. I can&#39;t find the old bioc-devel mailing list thread where I first learned this, but the idea is to download the latest R tar ball, change the name from 3.4 to something else (3.4devel in my case), put it back together into a tar ball and then use this tar ball to install a second R version.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Download latest R tarball
wget http://r.research.att.com/el-capitan/R-3.4-branch/R-3.4-branch-el-capitan-sa-x86_64.tar.gz

## Un-tar it
tar -xvf R-3.4-branch-el-capitan-sa-x86_64.tar.gz

## Renamed files from 3.4 to 3.4 devel
mv Library/Frameworks/R.framework/Versions/3.4 Library/Frameworks/R.framework/Versions/3.4devel

## Put it back in a tar ball
tar -cvzf Rlib.tgz Library

## Install it
sudo tar fvxz Rlib.tgz -C /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you go:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt = &#39;Rswitch&#39; width=&#39;400&#39; src=&#39;http://lcolladotor.github.io/figs/2017-05-04-updateR/rswitch.png&#39; /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;## Reproducibility info
library(&#39;devtools&#39;)
options(width = 120)
session_info()

## Session info -----------------------------------------------------------------------------------------------------------

##  setting  value                       
##  version  R version 3.4.0 (2017-04-21)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2017-05-04

## Packages ---------------------------------------------------------------------------------------------------------------

##  package       * version date       source        
##  BiocInstaller * 1.27.2  2017-05-04 Bioconductor  
##  devtools      * 1.12.0  2016-12-05 CRAN (R 3.4.0)
##  digest          0.6.12  2017-01-27 CRAN (R 3.4.0)
##  evaluate        0.10    2016-10-11 cran (@0.10)  
##  knitr         * 1.15.1  2016-11-22 cran (@1.15.1)
##  magrittr        1.5     2014-11-22 cran (@1.5)   
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)
##  stringi         1.1.5   2017-04-07 cran (@1.1.5) 
##  stringr         1.2.0   2017-02-18 cran (@1.2.0) 
##  withr           1.0.2   2016-06-20 CRAN (R 3.4.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student and alumni blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to ask for help for Bioconductor packages</title>
      <link>http://lcolladotor.github.io/2017/03/06/How-to-ask-for-help-for-Bioconductor-packages/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2017/03/06/How-to-ask-for-help-for-Bioconductor-packages/</guid>
      <description>

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;tl;dr Please post your question at the Bioconductor support website &lt;a href=&#34;https://support.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;https://support.bioconductor.org/&lt;/a&gt; and check the posting guide &lt;a href=&#34;http://www.bioconductor.org/help/support/posting-guide/&#34; target=&#34;_blank&#34;&gt;http://www.bioconductor.org/help/support/posting-guide/&lt;/a&gt;. It&#39;s important that you provide reproducible code and information about your R session.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Recently I have been getting more questions about several packages I maintain. It&#39;s great to see more interest from users, but at the same time most questions lack the information I need to help the users. I have also gotten most of the questions via email, which is why I am writing this post. As of today, I will no longer answer questions related to my Bioconductor packages via personal emails. This might sound harsh, but hopefully the rest of this post will convince you that it&#39;s the best thing to do. You might also be interested in the basics of using &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/vignettes/derfinder/inst/doc/derfinder-quickstart.html#basics&#34; target=&#34;_blank&#34;&gt;derfinder&lt;/a&gt;, &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/vignettes/regionReport/inst/doc/regionReport.html#basics&#34; target=&#34;_blank&#34;&gt;regionReport&lt;/a&gt; or &lt;a href=&#34;http://bioconductor.org/packages/release/bioc/vignettes/recount/inst/doc/recount-quickstart.html#basics&#34; target=&#34;_blank&#34;&gt;recount&lt;/a&gt;, among others.&lt;/p&gt;

&lt;p&gt;The Bioconductor project is a community project and it benefits from users interacting in public venues. When a user asks a question at the &lt;a href=&#34;https://support.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;Bioconductor support website&lt;/a&gt;, they are providing information that future users might be interested in. That is, the user (&lt;strong&gt;U1&lt;/strong&gt;) is contributing information to the overall documentation around the Bioconductor package they are asking a question about. Ideally, a new user (&lt;strong&gt;U2&lt;/strong&gt;) can then read through the question U1 wrote, check the solution, and move on. This is one of the main reasons why we (developers) want questions to be well documented. There are a couple of quick things that U1 can check that will make their question much more useful to the community.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://www.bioconductor.org/help/support/posting-guide/&#34;&gt;&lt;img alt = &#39;shinycsv landing&#39; width=&#39;600&#39; src=&#39;http://lcolladotor.github.io/figs/2017-03-06-bioc-support/question.png&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;session-information&#34;&gt;Session information&lt;/h2&gt;

&lt;p&gt;One of the strengths of Bioconductor is that all the packages have vignettes and lots of documentation. The packages are also checked regularly and must pass some tests. That also means that packages can change frequently, at least more frequently than CRAN packages. There&#39;s also the added complexity that at any given point in time there is a release branch and a development branch. This means that there are many variables and saying that you are using the &amp;quot;latest version&amp;quot; doesn&#39;t mean much to the developer. All of this information and more is part of the &lt;em&gt;R session information&lt;/em&gt;. That is why I and others request users to post their session information. It&#39;s very easy to get, simply run the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Install devtools if needed
# install.packages(&#39;devtools&#39;)

## Reproducibility info
library(&#39;devtools&#39;)
options(width = 120)
session_info()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output might be too long to post in the &lt;a href=&#34;https://support.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;Bioconductor support website&lt;/a&gt;. The easy solution is to save the information you want displayed in a &lt;a href=&#34;https://gist.github.com/&#34; target=&#34;_blank&#34;&gt;gist&lt;/a&gt;. Then simply add the gist link in your question. Note that you need to have the link under &amp;quot;text&amp;quot; formatting and not &amp;quot;code&amp;quot;.&lt;/p&gt;

&lt;h2 id=&#34;code-to-reproduce-the-error&#34;&gt;Code to reproduce the error&lt;/h2&gt;

&lt;p&gt;If U1 includes the session information, their question will be pretty good, but not ideal yet. Many of the questions I&#39;ve been asked do not include code for me to figure out the exact steps of what they were doing. A lot of times I can infer pieces of what they were doing from their description of the problem. But doing so takes quite a bit of my time and effort, and is still not perfect. Now imagine that U2 is reading through the question: they would probably get lost!&lt;/p&gt;

&lt;p&gt;There is a wide range of things that U1 could have done. To help the developer, the best thing is for the user to include the code that lead to the error. The code should include how the data was loaded, so that the developer can run it themselves and check in more detail what went wrong. This means providing a small subset of the data or using some publicly available data.&lt;/p&gt;

&lt;p&gt;I realize that writing code that reproduces the error is not easy. But it helps a lot for learning more about R and Bioconductor. I can tell you that I went through the same process, and in my experience you can find out what you are doing wrong by writing the reproducible code.&lt;/p&gt;

&lt;h2 id=&#34;extra&#34;&gt;Extra&lt;/h2&gt;

&lt;p&gt;Here are some other tips that are useful.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you run &lt;code&gt;traceback()&lt;/code&gt; immediately after getting the error and include the output in your question, that would be great. It makes it easier to check at what point the code failed and produced the error.&lt;/li&gt;
&lt;li&gt;Recently when I ask questions myself, I include the &amp;quot;non-evaluated code&amp;quot; (clean code in your script) and &amp;quot;evaluated code&amp;quot; (think of the R console: a mix of code and output). The non-evaluated code makes it easier for others to copy-paste the code into their R session without having to deal with any formatting issues (&lt;a href=&#34;https://github.com/leekgroup/recount/issues/8#issue-210124094&#34; target=&#34;_blank&#34;&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;If you encounter a new error, post a new question instead of &amp;quot;replying&amp;quot; to the first one.&lt;/li&gt;
&lt;li&gt;Introduce yourself.&lt;/li&gt;
&lt;li&gt;Be polite.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By now you should be ready to post some great questions! Thanks for contributing to the Bioconductor community.&lt;/p&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student and alumni blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easily explore a table with shinycsv</title>
      <link>http://lcolladotor.github.io/2017/01/20/Easily-explore-a-table-with-shinycsv/</link>
      <pubDate>Fri, 20 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2017/01/20/Easily-explore-a-table-with-shinycsv/</guid>
      <description>

&lt;p&gt;Have you ever had to explore a table with data? I believe the answer is &lt;em&gt;yes&lt;/em&gt; for most people that work at a computer or even just use it for communicating with their friends and family. Tables of data pop up everywhere, for example in personal finance. Websites like &lt;a href=&#34;https://www.mint.com/&#34; target=&#34;_blank&#34;&gt;Mint.com&lt;/a&gt; allow you to download your transactions in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Comma-separated_values&#34; target=&#34;_blank&#34;&gt;CSV&lt;/a&gt; file called &lt;code&gt;transactions.csv&lt;/code&gt;. CSV is one of the many formats for storing tables and most likely when you try to open the &lt;code&gt;transactions.csv&lt;/code&gt; file, it will open with Excel. Now, can you make a quick figure of one of your columns in your table?&lt;/p&gt;

&lt;p&gt;Some will answer yes, others no. The basic issue is that it&#39;s not &lt;em&gt;super&lt;/em&gt; easy to explore your data in Excel or similar programs. Wait, shouldn&#39;t it be easy? 😕&lt;/p&gt;

&lt;p&gt;What if you want to subset your data and want to re-make the plot? How about getting some simple statistics like the mean or frequency of some categories for a given variable? 😨 These are some of the immediate tasks that are helpful when exploring data. Visually, making figures with two variables is also very common.&lt;/p&gt;

&lt;p&gt;Programmers and experts in Excel, Stata, &lt;code&gt;R&lt;/code&gt; among other options can perform these data explorations. It might take them a little bit of time to write the code or remember it or use the user interface menu of their program of choice. But what about everyone else?&lt;/p&gt;

&lt;p&gt;At the &lt;a href=&#34;http://www.libd.org/&#34; target=&#34;_blank&#34;&gt;Lieber Institute for Brain Development&lt;/a&gt; where I work, it&#39;s common for us to exchange data in tables, and thus explore data. That&#39;s why we created &lt;code&gt;shinycsv&lt;/code&gt; &lt;a id=&#39;cite-shinycsv&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/LieberInstitute/shinycsv&#39;&gt;Collado-Torres, Semick, and Jaffe, 2016&lt;/a&gt;). It&#39;s an R package &lt;a id=&#39;cite-cran&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://www.R-project.org/&#39;&gt;R Core Team, 2016&lt;/a&gt;) that contains a &lt;code&gt;shiny&lt;/code&gt; &lt;a id=&#39;cite-shiny&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=shiny&#39;&gt;Chang, Cheng, Allaire, Xie, et al., 2017&lt;/a&gt;) application that allows users to interactively explore a table.&lt;/p&gt;

&lt;p&gt;Installing &lt;code&gt;R&lt;/code&gt; is a pretty high bar, that&#39;s why we are hosting this application at &lt;a href=&#34;https://jhubiostatistics.shinyapps.io/shinycsv/&#34; target=&#34;_blank&#34;&gt;https://jhubiostatistics.shinyapps.io/shinycsv/&lt;/a&gt;. Try it out!&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;https://jhubiostatistics.shinyapps.io/shinycsv/&#34;&gt;&lt;img alt = &#39;shinycsv landing&#39; width=&#39;600&#39; src=&#39;http://lcolladotor.github.io/figs/2017-01-20-shinycsv/landing.png&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;shinycsv-application&#34;&gt;shinycsv application&lt;/h2&gt;

&lt;p&gt;The application includes data about cars to demonstrate what it can do. It&#39;s a small data set that is commonly used for demonstration purposes. Anyhow, in the application you&#39;ll notice a few tabs.&lt;/p&gt;

&lt;p&gt;The application shows the &lt;strong&gt;&lt;em&gt;raw data&lt;/em&gt;&lt;/strong&gt; in an interactive table that allows you to subset the observations by some criteria, search in the table, and sort in different ways. The &lt;strong&gt;&lt;em&gt;raw summary&lt;/em&gt;&lt;/strong&gt; tab shows quick statistical summaries which depend on the variable type (numerical, categorical, etc). If you interacted with the table in &lt;em&gt;raw data&lt;/em&gt; then the summaries at &lt;em&gt;raw summary&lt;/em&gt; will be based on the subset you selected.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;one variable&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;two variables&lt;/em&gt;&lt;/strong&gt; tabs are for making figures based on one or two variables at a time. The code in &lt;code&gt;shinycsv&lt;/code&gt; tries to guess what&#39;s the best figure for a given type of variable and in case that you are interested in learning R, it also shows the exact code you can use to reproduce the figure in your computer. We added this feature to excite users about learning R. And it&#39;s useful for advanced users too that might want to customize the resulting figures. Hm..., you don&#39;t like the colors we chose for the figure? Well go to &lt;strong&gt;&lt;em&gt;plot colors&lt;/em&gt;&lt;/strong&gt;, choose another color, and come back to see your new figure with the color of your choosing. 😄&lt;/p&gt;

&lt;p&gt;Hm... but what if you don&#39;t have a CSV file? Well, &lt;code&gt;shinycsv&lt;/code&gt; can handle many different tables thanks to &lt;code&gt;rio&lt;/code&gt; &lt;a id=&#39;cite-rio&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;#bib-rio&#39;&gt;Chan, Chan, Leeper, and Becker, 2016&lt;/a&gt;). Even Excel sheets! 😉&lt;/p&gt;

&lt;p&gt;So, go ahead and test it out! We&#39;ll be glad to hear your feedback at &lt;a href=&#34;https://github.com/LieberInstitute/shinycsv/issues&#34; target=&#34;_blank&#34;&gt;LieberInstitute/shinycsv&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Note that when I referred to tables earlier, I referred to square tables with different variables (age, height, weight, etc) as columns as observations as rows. That is, Excel files with a single sheet with no comments or figures inside the Excel file.&lt;/li&gt;
&lt;li&gt;Are you interested in learning more about &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;shiny&lt;/code&gt;? Maybe you&#39;ll want to take a look at the &lt;a href=&#34;https://jhubiostatistics.shinyapps.io/shinycsv-showcase/&#34; target=&#34;_blank&#34;&gt;showcase mode version of the application&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you use &lt;code&gt;shinycsv::explore()&lt;/code&gt; locally, the file size limit is increased to 500 MB. Although at that point you might want to consider using &lt;code&gt;R&lt;/code&gt; or another programming language.&lt;/li&gt;
&lt;li&gt;What about casting variables? If you want to have fine control about casting the variables, save your data in a RData file. Sure, this requires an R user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;## Reproducibility info
library(&#39;devtools&#39;)
options(width = 120)
session_info()

## Session info -----------------------------------------------------------------------------------------------------------

##  setting  value                                             
##  version  R Under development (unstable) (2016-10-26 r71594)
##  system   x86_64, darwin13.4.0                              
##  ui       X11                                               
##  language (EN)                                              
##  collate  en_US.UTF-8                                       
##  tz       America/New_York                                  
##  date     2017-01-20

## Packages ---------------------------------------------------------------------------------------------------------------

##  package       * version  date       source        
##  bibtex          0.4.0    2014-12-31 CRAN (R 3.4.0)
##  bitops          1.0-6    2013-08-17 CRAN (R 3.4.0)
##  devtools      * 1.12.0   2016-12-05 CRAN (R 3.4.0)
##  digest          0.6.11   2017-01-03 CRAN (R 3.4.0)
##  evaluate        0.10     2016-10-11 CRAN (R 3.4.0)
##  httr            1.2.1    2016-07-03 CRAN (R 3.4.0)
##  knitcitations * 1.0.7    2015-10-28 CRAN (R 3.4.0)
##  knitr         * 1.15.1   2016-11-22 CRAN (R 3.4.0)
##  lubridate       1.6.0    2016-09-13 CRAN (R 3.4.0)
##  magrittr        1.5      2014-11-22 CRAN (R 3.4.0)
##  memoise         1.0.0    2016-01-29 CRAN (R 3.4.0)
##  plyr            1.8.4    2016-06-08 CRAN (R 3.4.0)
##  R6              2.2.0    2016-10-05 CRAN (R 3.4.0)
##  Rcpp            0.12.9   2017-01-14 CRAN (R 3.4.0)
##  RCurl           1.95-4.8 2016-03-01 CRAN (R 3.4.0)
##  RefManageR      0.13.1   2016-11-13 CRAN (R 3.4.0)
##  RJSONIO         1.3-0    2014-07-28 CRAN (R 3.4.0)
##  stringi         1.1.2    2016-10-01 CRAN (R 3.4.0)
##  stringr         1.1.0    2016-08-19 CRAN (R 3.4.0)
##  withr           1.0.2    2016-06-20 CRAN (R 3.4.0)
##  XML             3.98-1.5 2016-11-10 CRAN (R 3.4.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-knitcitations&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2015&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-knitcitations&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-knitcitations&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;em&gt;knitcitations: Citations for &#39;Knitr&#39; Markdown Files&lt;/em&gt;.
R package version 1.0.7.
2015.
URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-rio&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-rio&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
C. Chan, G. C. Chan, T. J. Leeper and J. Becker.
&lt;em&gt;rio: A Swiss-army knife for data file I/O&lt;/em&gt;.
R package version 0.4.16.
2016.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-shiny&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-shiny&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt;
W. Chang, J. Cheng, J. Allaire, Y. Xie, et al.
&lt;em&gt;shiny: Web Application Framework for R&lt;/em&gt;.
R package version 1.0.0.
2017.
URL: &lt;a href=&#34;https://CRAN.R-project.org/package=shiny&#34;&gt;https://CRAN.R-project.org/package=shiny&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-shinycsv&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-shinycsv&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt;
L. Collado-Torres, S. Semick and A. E. Jaffe.
&lt;em&gt;shinycsv: Explore a table interactively in a shiny application&lt;/em&gt;.
R package version 0.99.7.
2016.
URL: &lt;a href=&#34;https://github.com/LieberInstitute/shinycsv&#34;&gt;https://github.com/LieberInstitute/shinycsv&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-cran&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-cran&#34;&gt;[5]&lt;/a&gt;&lt;cite&gt;
R Core Team.
&lt;em&gt;R: A Language and Environment for Statistical Computing&lt;/em&gt;.
R Foundation for Statistical Computing.
Vienna, Austria, 2016.
URL: &lt;a href=&#34;https://www.R-project.org/&#34;&gt;https://www.R-project.org/&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finding possible class schedules</title>
      <link>http://lcolladotor.github.io/2016/08/02/materias/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2016/08/02/materias/</guid>
      <description>

&lt;p&gt;Over the weekend my brother wanted to figure out his class schedule for the next semester. He is a veterinary medicine and zootechnology student at UNAM. For this upcoming semester there is a set of classes he has to take and each has 8 or so instructor options. The website where he finds the class times lists about 8 pre-constructed class schedules. So he normally finds one he likes quite a bit, and then manually starts checking if he can change X instructor for Y for a given class. He does this based on the referalls and information he has gathered about the instructors, plus he factors in whether it&#39;d be an overall better schedule. For example, he might prefer to have a packed Tuesday if that means that he can leave early on Friday and avoid classes on Saturday.&lt;/p&gt;

&lt;p&gt;The problem is that it&#39;s very easy to make a mistake. You (well he) gets all excited thinking that he&#39;s found the perfect schedule. Only to then realize that there is a conflict between two classes. Or that the practical portion of a class is in a location one hour away from the university, meaning that the schedule he has selected won&#39;t work. This process is very frustrating.&lt;/p&gt;

&lt;p&gt;I was watching him and I started to think if I could help him with some code. Turns out that it was straightforward to write some code to find which options are valid. Once I wrote a test case, it took us like half an hour to fill out the data. I know that tomorrow is when he and his classmates start registering for classes, so this information might help his classmates.&lt;/p&gt;

&lt;p&gt;First, I define some helper functions. These are rather straightforward but I&#39;ll be using them later on. For example, &lt;code&gt;dias()&lt;/code&gt; is just there for typing less.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Helper functions
dias &amp;lt;- function(d, i) {
    paste0(d, i)
}

extract &amp;lt;- function(m, p) {
    m[[p]]
}

extract_names &amp;lt;- function(m, p) {
    names(m)[p]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next comes the input information. I organized it in a set of nested &lt;code&gt;list&lt;/code&gt; objects. The schedule is stored as a character vector. For example, Lucia Eliana&#39;s class meets on Wednesdays (&lt;strong&gt;M&lt;/strong&gt;iercoles in Spanish) from 9 to 11 am. I only keep the starting hours (9 and 10 am) because otherwise the code won&#39;t detect valid opitons that include another class that starts at 11 am. For classes that are 1 hour away from the university, we included 1 hour before and 1 hour after the class.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Input class/prof info and schedule
materias &amp;lt;- list(
    repro = list(
        &#39;lucia eliana&#39; = c(dias(&#39;m&#39;, 9:10), dias(&#39;j&#39;, 9:10), dias(&#39;v&#39;, 8:13)),
        &#39;esquivel lacroix&#39; = c(dias(&#39;l&#39;, 14:15), dias(&#39;ma&#39;, 12:18), dias(&#39;m&#39;, 14:15)),
        &#39;ismael porras&#39; = c(dias(&#39;l&#39;, 9:10), dias(&#39;m&#39;, 8:14), dias(&#39;j&#39;, 9:10)),
        &#39;esquivel lacroix 2&#39; = c(dias(&#39;l&#39;, 14:15), dias(&#39;m&#39;, 14:15), dias(&#39;v&#39;, 12:18)),
        &#39;salvador galina&#39; = c(dias(&#39;ma&#39;, 8:13), dias(&#39;j&#39;, 9:10), dias(&#39;v&#39;, 9:10)),
        &#39;alberto balcazar&#39; = c(dias(&#39;l&#39;, 15:16), dias(&#39;j&#39;, 12:18), dias(&#39;v&#39;, 14:15)),
        &#39;ana myriam boeta&#39; = c(dias(&#39;l&#39;, 8:13), dias(&#39;m&#39;, 10:11), dias(&#39;v&#39;, 9:10)),
        &#39;rafael eduardo paz&#39; = c(dias(&#39;l&#39;, 11:17), dias(&#39;j&#39;, 14:15), dias(&#39;v&#39;, 16:17)),
        &#39;juan heberth&#39; = c(dias(&#39;ma&#39;, 9:10), dias(&#39;m&#39;, 11:17), dias(&#39;v&#39;, 11:12)),
        &#39;vicente octavio mejia&#39; = c(dias(&#39;ma&#39;, 8:17))
    ),
    economia = list(
        &#39;valentin efren espinoza&#39; = c(dias(&#39;l&#39;, 8:10), dias(&#39;ma&#39;, 9:11)),
        &#39;maria del pilar velazquez&#39; = c(dias(&#39;l&#39;, 16:18), dias(&#39;m&#39;, 16:18)),
        &#39;arturo alonso pesado&#39; = c(dias(&#39;l&#39;, 11:13), dias(&#39;j&#39;, 11:13)),
        &#39;laura mendez&#39; = c(dias(&#39;ma&#39;, 13:15), dias(&#39;m&#39;, 18:20)),
        &#39;laura mendez 2&#39; = c(dias(&#39;j&#39;, 11:13), dias(&#39;v&#39;, 11:13)),
        &#39;manuela garcia&#39; = c(dias(&#39;l&#39;, 17:19), dias(&#39;v&#39;, 16:18)),
        &#39;francisco alejandro&#39; = c(dias(&#39;ma&#39;, 7:9), dias(&#39;j&#39;, 7:9)),
        &#39;isaac reyes&#39; = c(dias(&#39;m&#39;, 13:15), dias(&#39;v&#39;, 13:15)),
        &#39;jose luis tinoco&#39; = c(dias(&#39;ma&#39;, 12:14), dias(&#39;m&#39;, 9:11)),
        &#39;isaac reyes 2&#39; = c(dias(&#39;l&#39;, 14:16), dias(&#39;ma&#39;, 14:16))
        
    ),
    bacterianas = list(
        &#39;jose luis gutierrez&#39; = dias(&#39;s&#39;, 8:11),
        &#39;rodrigo mena&#39; = c(dias(&#39;ma&#39;, 18:19), dias(&#39;j&#39;, 18:19)),
        &#39;beatriz arellano&#39; = c(dias(&#39;l&#39;, 7:8), dias(&#39;ma&#39;, 10:11)),
        &#39;de la pena, ramirez ortega&#39; = c(dias(&#39;j&#39;, 18:19), dias(&#39;v&#39;, 18:19)),
        &#39;ramirez ortega&#39; = c(dias(&#39;m&#39;, 7:8), dias(&#39;j&#39;, 7:8)),
        &#39;rodrigo mena 2&#39; = c(dias(&#39;ma&#39;, 16:17), dias(&#39;m&#39;, 16:17)),
        &#39;de la pena&#39; = dias(&#39;s&#39;, 8:11),
        &#39;efren diaz aparicio&#39; = dias(&#39;s&#39;, 8:11),
        &#39;lucia del carmen favila&#39; = dias(&#39;s&#39;, 8:11)
    ),
    parasitarias = list(
        &#39;cintli martinez&#39; = c(dias(&#39;j&#39;, 16:17), dias(&#39;v&#39;, 18:20)),
        &#39;osvaldo froylan&#39; = c(dias(&#39;ma&#39;, 18:19), dias(&#39;j&#39;, 18:20)),
        &#39;maria quintero, agustin perez&#39; = c(dias(&#39;ma&#39;, 13:14), dias(&#39;m&#39;, 7:9)),
        &#39;maria quintero&#39; = c(dias(&#39;m&#39;, 16:18), dias(&#39;j&#39;, 16:17)),
        &#39;evangelina romero&#39; = c(dias(&#39;ma&#39;, 7:8), dias(&#39;v&#39;, 7:9)),
        &#39;guadarrama 01&#39; = c(dias(&#39;m&#39;, 7:8), dias(&#39;j&#39;, 11:13)),
        &#39;guadarrama 03&#39; = c(dias(&#39;ma&#39;, 13:15), dias(&#39;v&#39;, 7:8)),
        &#39;guadarrama 04&#39; = c(dias(&#39;l&#39;, 16:17), dias(&#39;ma&#39;, 18:20)),
        &#39;guadarrama 05&#39; = c(dias(&#39;l&#39;, 7:9), dias(&#39;j&#39;, 7:8))
    ),
    diagnosticas = list(
        &#39;1701&#39; = c(dias(&#39;l&#39;, 11:13), dias(&#39;m&#39;, 11:16)),
        &#39;1702&#39; = c(dias(&#39;j&#39;, 13:15), dias(&#39;v&#39;, 13:18)),
        &#39;1703&#39; = c(dias(&#39;ma&#39;, 7:9), dias(&#39;v&#39;, 8:13)),
        &#39;1704&#39; = c(dias(&#39;l&#39;, 18:20), dias(&#39;j&#39;, 13:18)),
        &#39;1705&#39; = c(dias(&#39;l&#39;, 11:13), dias(&#39;m&#39;, 7:11)),
        &#39;1706&#39; = c(dias(&#39;ma&#39;, 15:17), dias(&#39;m&#39;, 15:19)),
        &#39;1707&#39; = c(dias(&#39;ma&#39;, 10:12), dias(&#39;j&#39;, 10:15)),
        &#39;1708&#39; = c(dias(&#39;l&#39;, 18:20), dias(&#39;ma&#39;, 15:19)),
        &#39;1709&#39; = c(dias(&#39;l&#39;, 11:13), dias(&#39;j&#39;, 8:13)),
        &#39;1711&#39; = c(dias(&#39;j&#39;, 13:15), dias(&#39;v&#39;, 10:13))
    )
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that the input information is complete, I use &lt;code&gt;expand.grid()&lt;/code&gt; to find out all the different possible options.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Get all the options
options &amp;lt;- expand.grid(lapply(materias, function(x) { seq_len(length(x))}))
dim(options)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 81000     5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There&#39;s 81,00 of them including the classes that meet on Saturday. You can see why it&#39;s a frustrating process to find which combination of classes work when doing this manually.&lt;/p&gt;

&lt;p&gt;Next, I explore all these options to find those that are valid, meaning that none of the classes overlap. I do this by finding which options have no duplicated hours from the character vectors defined earlier. Nothing fancy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;valid &amp;lt;- apply(options, 1, function(input) {
    info &amp;lt;- mapply(extract, materias, input)
    !any(duplicated(unlist(info)))
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that I have the valid options, I can find the names of the instructors for them. There&#39;s 2,847 valid schedules in the end, out of the 81,000. That&#39;s 3.5 percent!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;valid_prof &amp;lt;- apply(options[valid, ], 1, function(input) {
    mapply(extract_names, materias, input)
})
ncol(valid_prof)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 2847
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can search the interactive version &lt;a href=&#34;https://lcolladotor.shinyapps.io/materias/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to select only the options with a given instructor. For example, in my brother&#39;s case there are 30 valid options once he decided to prioritize two instructors as shown in the non-interactive table below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Ideally, this code would create an interactive table, but it doesn&#39;t work for some reason:
#library(&#39;DT&#39;)
#datatable(t(valid_prof), options = list(pagingType=&#39;full_numbers&#39;, pageLength=10), rownames = FALSE)
valid_prof &amp;lt;- t(valid_prof)
rownames(valid_prof) &amp;lt;- seq_len(nrow(valid_prof))
top_options &amp;lt;- valid_prof[valid_prof[, 1] == &#39;lucia eliana&#39; &amp;amp; valid_prof[, 2] %in% c(&#39;isaac reyes&#39;, &#39;isaac reyes 2&#39;), ]
kable(top_options, format = &#39;markdown&#39;, row.names = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;repro&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;economia&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;bacterianas&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;parasitarias&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;diagnosticas&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jose luis gutierrez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rodrigo mena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;beatriz arellano&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ramirez ortega&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;31&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;efren diaz aparicio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia del carmen favila&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cintli martinez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jose luis gutierrez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;beatriz arellano&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;58&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ramirez ortega&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;67&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;76&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;efren diaz aparicio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;85&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia del carmen favila&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;osvaldo froylan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jose luis gutierrez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;130&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rodrigo mena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;134&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;beatriz arellano&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;137&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena, ramirez ortega&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;144&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;151&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;efren diaz aparicio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;158&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia del carmen favila&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;209&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jose luis gutierrez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;217&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rodrigo mena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;222&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena, ramirez ortega&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;232&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;242&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;efren diaz aparicio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;252&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia del carmen favila&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1701&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;872&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jose luis gutierrez&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1704&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;885&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;de la pena&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1704&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;894&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;efren diaz aparicio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1704&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;903&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia eliana&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;isaac reyes 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;lucia del carmen favila&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guadarrama 05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1704&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Reproducibility info
library(&#39;devtools&#39;)
session_info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Session info --------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.3.0 (2016-05-03)
##  system   x86_64, mingw32             
##  ui       RStudio (0.99.902)          
##  language (EN)                        
##  collate  English_United States.1252  
##  tz       America/Mexico_City         
##  date     2016-08-02
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Packages ------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  package   * version date       source        
##  devtools  * 1.12.0  2016-06-24 CRAN (R 3.3.1)
##  digest      0.6.9   2016-01-08 CRAN (R 3.3.0)
##  evaluate    0.9     2016-04-29 CRAN (R 3.3.0)
##  formatR     1.4     2016-05-09 CRAN (R 3.3.0)
##  highr       0.6     2016-05-09 CRAN (R 3.3.0)
##  knitr     * 1.13    2016-05-09 CRAN (R 3.3.0)
##  magrittr    1.5     2014-11-22 CRAN (R 3.3.0)
##  memoise     1.0.0   2016-01-29 CRAN (R 3.3.0)
##  rsconnect   0.4.3   2016-05-02 CRAN (R 3.3.0)
##  stringi     1.1.1   2016-05-27 CRAN (R 3.3.0)
##  stringr     1.0.0   2015-04-30 CRAN (R 3.3.0)
##  withr       1.0.2   2016-06-20 CRAN (R 3.3.1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Are you doing parallel computations in R? Then use BiocParallel</title>
      <link>http://lcolladotor.github.io/2016/03/07/BiocParallel/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2016/03/07/BiocParallel/</guid>
      <description>

&lt;p&gt;It&#39;s the morning of the first day of oral conferences at &lt;a href=&#34;https://twitter.com/search?q=%23ENAR2016&amp;amp;src=tyah&#34; target=&#34;_blank&#34;&gt;#ENAR2016&lt;/a&gt;. I feel like I have a &lt;a href=&#34;https://en.wiktionary.org/wiki/Spidey-sense&#34; target=&#34;_blank&#34;&gt;spidey sense&lt;/a&gt; since I woke up 3 min after an email from Jeff Leek; just a funny coincidence. Anyhow, I promised Valerie Obenchain at &lt;a href=&#34;https://twitter.com/hashtag/bioc2014&#34; target=&#34;_blank&#34;&gt;#Bioc2014&lt;/a&gt; that I would write a post about one of my favorite Bioconductor packages: &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/BiocParallel.html&#34; target=&#34;_blank&#34;&gt;BiocParallel&lt;/a&gt; &lt;a id=&#39;cite-biocparallel&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;#bib-biocparallel&#39;&gt;Morgan, Obenchain, Lang, and Thompson, 2016&lt;/a&gt;). By now it&#39;s on the top 5% of downloaded Bioconductor packages, so many people know about it or are unaware that their favorite package uses it behind the scenes.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://www.bioconductor.org&#34;&gt;&lt;img src=&#34;http://www.bioconductor.org/images/logo_bioconductor.gif&#34; alt=&#34;BioconductorLogo&#34; style=&#34;width: 260px;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While I haven&#39;t blogged about &lt;code&gt;BiocParallel&lt;/code&gt; yet, I did give a presentation about it at our computing club back in April 2nd, 2015. See it &lt;a href=&#34;http://lcolladotor.github.io/BiocParallel-knitrBootstrap/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; (&lt;a href=&#34;https://github.com/lcolladotor/BiocParallel-knitrBootstrap&#34; target=&#34;_blank&#34;&gt;source&lt;/a&gt;). I&#39;m going to follow its structure in this post.&lt;/p&gt;

&lt;h2 id=&#34;parallel-computing&#34;&gt;Parallel computing&lt;/h2&gt;

&lt;p&gt;Before even thinking about using &lt;code&gt;BiocParallel&lt;/code&gt; you have to decide whether parallel computing is the thing you need.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#39;http://gnoted.com/wp-content/uploads/2012/02/cloud_43-595x553.jpg&#39;&gt;&lt;img alt = &#39;Cloud joke&#39; height=&#39;553&#39; src=&#39;http://lcolladotor.github.io/figs/2016-03-07-BiocParallel/cloud.jpg&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While I&#39;m not talking about cloud computing, I still find this picture funny.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#39;http://www.mathworks.com/cmsimages/63635_wl_91710v00_po_fig2_wl.gif&#39;&gt;&lt;img alt = &#39;Parallel diagram&#39; height=&#39;400&#39; src=&#39;http://lcolladotor.github.io/figs/2016-03-07-BiocParallel/parallel.gif&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;There&#39;s different types of parallel computing, but what I&#39;m referring to here is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Embarrassingly_parallel&#34; target=&#34;_blank&#34;&gt;embarrassingly parallel&lt;/a&gt; where you have a task to do for a set of inputs, you split your inputs into subsets and perform the task on these subsets. Performing this task for one input a a time is called &lt;em&gt;serial programming&lt;/em&gt; and it&#39;s what we do in most cases when using functions like &lt;code&gt;lapply()&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; loops.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(y = 10 / (1:10), 1:10, xlab = &#39;Number of cores&#39;, ylab = &#39;Time&#39;,
    main = &#39;Ideal scenario&#39;, type = &#39;o&#39;, col = &#39;blue&#39;,
    cex = 2, cex.axis = 2, cex.lab = 1.5, cex.main = 2, pch = 16)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2016-03-07-BiocParallel/ideal-1.png&#34; alt=&#34;center&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You might be running a simulation for a different set of parameters (a parameter grid) and running each simulation could take some time. Parallel computing can help you speed up this problem. In the ideal scenario, the higher number of computing cores (units that evaluate subsets of your inputs) the less time you need to run your full analysis.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(y = 10 / (1:10), 1:10, xlab = &#39;Number of cores&#39;, ylab = &#39;Time&#39;,
    main = &#39;Reality&#39;, type = &#39;o&#39;, col = &#39;blue&#39;,
    cex = 2, cex.axis = 2, cex.lab = 1.5, cex.main = 2, pch = 16)
lines(y = 10 / (1:10) * c(1, 1.05^(2:10) ), 1:10, col = &#39;red&#39;,
    type = &#39;o&#39;, cex = 2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2016-03-07-BiocParallel/reality-1.png&#34; alt=&#34;center&#34; /&gt;&lt;/p&gt;

&lt;p&gt;However, in reality parallel computing is not cost-free. It involves some communication costs, like sending the data to the cores, aggregating the results in a way that you can then easily use, among other things. So, it&#39;ll be a bit slower than the ideal scenario but you can potentially still greatly reduce the overall time.&lt;/p&gt;

&lt;p&gt;Having said all of the above, lets say that you now want to do some parallel computing in &lt;code&gt;R&lt;/code&gt;. Where do you start? A pretty good place to start is the &lt;a href=&#34;http://cran.r-project.org/web/views/HighPerformanceComputing.html&#34; target=&#34;_blank&#34;&gt;CRAN Task View: High-Performance and Parallel Computing with R&lt;/a&gt;. There you&#39;ll find a lot of information about different packages that enable you to do parallel computing with &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#39;http://thumbs.dreamstime.com/x/word-cloud-parallel-computing-27198811.jpg&#39;&gt;&lt;img alt = &#39;Confusing word cloud&#39; height=&#39;367&#39; src=&#39;http://lcolladotor.github.io/figs/2016-03-07-BiocParallel/wordcloud.jpg&#39; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;But you&#39;ll soon be lost in a sea of new terms.&lt;/p&gt;

&lt;h2 id=&#34;why-use-biocparallel&#34;&gt;Why use BiocParallel?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It&#39;s simple to use.&lt;/li&gt;
&lt;li&gt;You can try different parallel backends without changing your code.&lt;/li&gt;
&lt;li&gt;You can use it to submit cluster jobs.&lt;/li&gt;
&lt;li&gt;You&#39;ll have access to great support from the Bioconductor developer team.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are the big reasons of why I use &lt;code&gt;BiocParallel&lt;/code&gt;. But let me go through them a bit more slowly.&lt;/p&gt;

&lt;h3 id=&#34;birthday-example&#34;&gt;Birthday example&lt;/h3&gt;

&lt;p&gt;I&#39;m going to use as an example the birthday problem where you want to find out empirically the probability that two people share the same birthday in a room.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;birthday &amp;lt;- function(n) {
    m &amp;lt;- 10000
    x &amp;lt;- numeric(m)
    for(i in seq_len(m)) {
        b &amp;lt;- sample(seq_len(365), n, replace = TRUE)
        x[i] &amp;lt;- ifelse(length(unique(b)) == n, 0, 1)
    }
    mean(x)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;naive-birthday-code&#34;&gt;Naive birthday code&lt;/h4&gt;

&lt;p&gt;Once you have written the code for it, you can then use &lt;code&gt;lapply()&lt;/code&gt; or a &lt;code&gt;for&lt;/code&gt; loop to calculate the results.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;system.time( lapply(seq_len(100), birthday) )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##  25.610   0.442  27.430
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Takes around 25 seconds.&lt;/p&gt;

&lt;h4 id=&#34;via-domc&#34;&gt;Via doMC&lt;/h4&gt;

&lt;p&gt;If you looked at &lt;a href=&#34;http://cran.r-project.org/web/views/HighPerformanceComputing.html&#34; target=&#34;_blank&#34;&gt;CRAN Task View: High-Performance and Parallel Computing with R&lt;/a&gt; you might have found the &lt;code&gt;doMC&lt;/code&gt; &lt;a id=&#39;cite-domc&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://CRAN.R-project.org/package=doMC&#39;&gt;Analytics and Weston, 2015&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It allows you to run computations in parallel as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#39;doMC&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: foreach
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: iterators
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: parallel
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;registerDoMC(2)
system.time( x &amp;lt;- foreach(j = seq_len(100)) %dopar% birthday(j) )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##  12.819   0.246  13.309
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While it&#39;s a bit faster, the main problem is that you had to change your code in order to be able to use it.&lt;/p&gt;

&lt;h4 id=&#34;with-biocparallel&#34;&gt;With BiocParallel&lt;/h4&gt;

&lt;p&gt;This is how you would run things with &lt;code&gt;BiocParallel&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#39;BiocParallel&#39;)
system.time( y &amp;lt;- bplapply(seq_len(100), birthday) )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.021   0.011  16.095
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only change here is using &lt;code&gt;bplapply()&lt;/code&gt; instead of &lt;code&gt;lapply()&lt;/code&gt;, so just 2 characters. Well, that and loading the &lt;code&gt;BiocParallel&lt;/code&gt; package.&lt;/p&gt;

&lt;h3 id=&#34;biocparallel-s-advantages&#34;&gt;BiocParallel&#39;s advantages&lt;/h3&gt;

&lt;p&gt;There are many computation backends and one of the strongest features of &lt;code&gt;BiocParallel&lt;/code&gt; is that it&#39;s easy to switch between them. For example, my computer can run the following options:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;registered()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $MulticoreParam
## class: MulticoreParam 
##   bpjobname:BPJOB; bpworkers:2; bptasks:0; bptimeout:Inf; bpRNGseed:; bpisup:FALSE
##   bplog:FALSE; bpthreshold:INFO; bplogdir:NA
##   bpstopOnError:FALSE; bpprogressbar:FALSE
##   bpresultdir:NA
## cluster type: FORK 
## 
## $SnowParam
## class: SnowParam 
##   bpjobname:BPJOB; bpworkers:2; bptasks:0; bptimeout:Inf; bpRNGseed:; bpisup:FALSE
##   bplog:FALSE; bpthreshold:INFO; bplogdir:NA
##   bpstopOnError:FALSE; bpprogressbar:FALSE
##   bpresultdir:NA
## cluster type: SOCK 
## 
## $SerialParam
## class: SerialParam 
##   bplog:FALSE; bpthreshold:INFO
##   bpcatchErrors:FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If I was doing this in our computing cluster, I would see even more options.&lt;/p&gt;

&lt;p&gt;Now lets say that I want to test different computation backends, or even run things in serial mode so I can trace a bug down more easily. Well, all I have to do is change the &lt;code&gt;BPPARAM&lt;/code&gt; argument as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Test in serial mode
system.time( y.serial &amp;lt;- bplapply(1:10, birthday,
    BPPARAM = SerialParam()) )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   2.577   0.033   2.733
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Try Snow
system.time( y.snow &amp;lt;- bplapply(1:10, birthday, 
    BPPARAM = SnowParam(workers = 2)) )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##   0.027   0.006   2.436
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Talking about computing clusters, you might be interested in using &lt;code&gt;BatchJobs&lt;/code&gt; &lt;a id=&#39;cite-batchjobs&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://www.jstatsoft.org/v64/i11/&#39;&gt;Bischl, Lang, Mersmann, Rahnenführer, et al., 2015&lt;/a&gt;) just like &lt;a href=&#34;http://www.biostat.jhsph.edu/~prpatil/&#34; target=&#34;_blank&#34;&gt;Prasad Patil&lt;/a&gt; did for his PhD work. Well, with &lt;code&gt;BiocParallel&lt;/code&gt; you can also chose to use the &lt;code&gt;BatchJobs&lt;/code&gt; backend. I have code showing this at the &lt;a href=&#34;http://lcolladotor.github.io/BiocParallel-knitrBootstrap/&#34; target=&#34;_blank&#34;&gt;presentation I referenced earlier&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;where-do-i-start&#34;&gt;Where do I start?&lt;/h2&gt;

&lt;p&gt;If you are convinced about using &lt;code&gt;BiocParallel&lt;/code&gt;, which I hope you are by now, check out the &lt;code&gt;Introduction to BiocParallel&lt;/code&gt; vignette available at &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/BiocParallel.html&#34; target=&#34;_blank&#34;&gt;BiocParallel&#39;s landing page&lt;/a&gt;. It explains in more detail how to use it and it&#39;s rich set of features. But if you just want to jump right in and start playing around with it, install it by running the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## try http:// if https:// URLs are not supported
source(&amp;quot;https://bioconductor.org/biocLite.R&amp;quot;)
biocLite(&amp;quot;BiocParallel&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Like I said earlier, &lt;code&gt;BiocParallel&lt;/code&gt; is simple to use and has definite advantages over other solutions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can try different parallel backends without changing your code.&lt;/li&gt;
&lt;li&gt;You can use it to submit cluster jobs.&lt;/li&gt;
&lt;li&gt;You&#39;ll have access to great support from the Bioconductor developer team. See &lt;a href=&#34;https://support.bioconductor.org/t/biocparallel/&#34; target=&#34;_blank&#34;&gt;the biocparallel tag at the support website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have fun using it!&lt;/p&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Reproducibility info
library(&#39;devtools&#39;)
session_info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Session info --------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.2.2 (2015-08-14)
##  system   x86_64, darwin13.4.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/Chicago             
##  date     2016-03-07
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Packages ------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  package        * version  date       source        
##  bibtex           0.4.0    2014-12-31 CRAN (R 3.2.0)
##  BiocParallel   * 1.4.3    2015-12-16 Bioconductor  
##  bitops           1.0-6    2013-08-17 CRAN (R 3.2.0)
##  codetools        0.2-14   2015-07-15 CRAN (R 3.2.2)
##  devtools       * 1.10.0   2016-01-23 CRAN (R 3.2.3)
##  digest           0.6.9    2016-01-08 CRAN (R 3.2.3)
##  doMC           * 1.3.4    2015-10-13 CRAN (R 3.2.0)
##  evaluate         0.8      2015-09-18 CRAN (R 3.2.0)
##  foreach        * 1.4.3    2015-10-13 CRAN (R 3.2.0)
##  formatR          1.2.1    2015-09-18 CRAN (R 3.2.0)
##  futile.logger    1.4.1    2015-04-20 CRAN (R 3.2.0)
##  futile.options   1.0.0    2010-04-06 CRAN (R 3.2.0)
##  httr             1.1.0    2016-01-28 CRAN (R 3.2.3)
##  iterators      * 1.0.8    2015-10-13 CRAN (R 3.2.0)
##  knitcitations  * 1.0.7    2015-10-28 CRAN (R 3.2.0)
##  knitr          * 1.12.3   2016-01-22 CRAN (R 3.2.3)
##  lambda.r         1.1.7    2015-03-20 CRAN (R 3.2.0)
##  lubridate        1.5.0    2015-12-03 CRAN (R 3.2.3)
##  magrittr         1.5      2014-11-22 CRAN (R 3.2.0)
##  memoise          1.0.0    2016-01-29 CRAN (R 3.2.3)
##  plyr             1.8.3    2015-06-12 CRAN (R 3.2.1)
##  R6               2.1.2    2016-01-26 CRAN (R 3.2.3)
##  Rcpp             0.12.3   2016-01-10 CRAN (R 3.2.3)
##  RCurl            1.95-4.7 2015-06-30 CRAN (R 3.2.1)
##  RefManageR       0.10.6   2016-02-15 CRAN (R 3.2.3)
##  RJSONIO          1.3-0    2014-07-28 CRAN (R 3.2.0)
##  snow             0.4-1    2015-10-31 CRAN (R 3.2.0)
##  stringi          1.0-1    2015-10-22 CRAN (R 3.2.0)
##  stringr          1.0.0    2015-04-30 CRAN (R 3.2.0)
##  XML              3.98-1.3 2015-06-30 CRAN (R 3.2.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-knitcitations&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2015&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-domc&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-domc&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
R. Analytics and S. Weston.
&lt;em&gt;doMC: Foreach Parallel Adaptor for &#39;parallel&#39;&lt;/em&gt;.
R package version 1.3.4.
2015.
URL: &lt;a href=&#34;http://CRAN.R-project.org/package=doMC&#34;&gt;http://CRAN.R-project.org/package=doMC&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-batchjobs&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-batchjobs&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
B. Bischl, M. Lang, O. Mersmann, J. Rahnenführer, et al.
&amp;ldquo;BatchJobs and BatchExperiments: Abstraction Mechanisms for Using R in Batch Environments&amp;rdquo;.
In: &lt;em&gt;Journal of Statistical Software&lt;/em&gt; 64.11 (2015), pp. 1&amp;ndash;25.
URL: &lt;a href=&#34;http://www.jstatsoft.org/v64/i11/&#34;&gt;http://www.jstatsoft.org/v64/i11/&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-knitcitations&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-knitcitations&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;em&gt;knitcitations: Citations for &#39;Knitr&#39; Markdown Files&lt;/em&gt;.
R package version 1.0.7.
2015.
URL: &lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34;&gt;http://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-biocparallel&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-biocparallel&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt;
M. Morgan, V. Obenchain, M. Lang and R. Thompson.
&lt;em&gt;BiocParallel: Bioconductor facilities for parallel evaluation&lt;/em&gt;.
R package version 1.4.3.
2016.&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching a short topic to beginner R users</title>
      <link>http://lcolladotor.github.io/2015/07/07/rmarkdown/</link>
      <pubDate>Tue, 07 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2015/07/07/rmarkdown/</guid>
      <description>

&lt;p&gt;A couple weeks ago I was given the opportunity to teach a 1 hr 30 min slot of an introduction to &lt;code&gt;R&lt;/code&gt; course. In the past, I&#39;ve taught lectures for similar courses, and I ended up asking myself what would be the best short topic to teach and how to teach it.&lt;/p&gt;

&lt;h2 id=&#34;best-short-topic&#34;&gt;Best short topic&lt;/h2&gt;

&lt;p&gt;There are two ways to answer the first question, one boring and one more interesting. The boring answer is that the course instructor selected the topic. The interesting one goes like this. I have taken short &lt;code&gt;R&lt;/code&gt; courses before and taught others, and it&#39;s always overwhelming for the students. You get to cover many concepts, get familiarized with &lt;code&gt;R&lt;/code&gt;&#39;s syntax, and in the end without lots of practice it&#39;s very challenging to retain much of the information. I think that students love it when they learn how to do something simple that could be the first building block for many of their projects. In parallel, I think that one of the coolest &lt;code&gt;R&lt;/code&gt; topics you can learn in an hour is how to create reproducible documents with &lt;code&gt;rmarkdown&lt;/code&gt; &lt;a id=&#39;cite-rmarkdown&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://CRAN.R-project.org/package=rmarkdown&#39;&gt;Allaire, Cheng, Xie, McPherson, et al., 2015&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Learning how to use a single function, &lt;code&gt;render()&lt;/code&gt; in this case, is as simple as it gets. And using the &lt;a href=&#34;http://www.rstudio.com/products/rstudio/#Desktop&#34; target=&#34;_blank&#34;&gt;RStudio Desktop&lt;/a&gt; is even simpler. Of course, it can easily get complicated. For example, on a new computer you need to install all the LaTeX dependencies if you want to create PDF files. That task can take some time and maybe scare away some new users. But PDF files are really a plus in this case since you can start creating HTML and Word documents. Other complications arise when a user is interested in more control over formatting the file, but like I said earlier, all you need is a simple building block and &lt;code&gt;rmarkdown&lt;/code&gt; is clearly one of them.&lt;/p&gt;

&lt;p&gt;This is why the final answer to the first question was teaching how to use &lt;code&gt;rmarkdown&lt;/code&gt; to create reproducible reports (HTML, Word files) using &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;how-to-teach-it&#34;&gt;How to teach it&lt;/h2&gt;

&lt;p&gt;Teaching a short topic to a beginner&#39;s audience is no easy feat. In the past I&#39;ve made lectures that have the code for every single step and many links to resources where students can learn some details. That is, I&#39;ve created the lectures in such a way that a student can later use them as reference and follow them without an instructor explaining them.&lt;/p&gt;

&lt;p&gt;That&#39;s a strategy that I think works on the long run. However, it makes the actual lecture boring and very limited in interactivity. At the JHSPH biostat computing club, other students have chosen to use a lot of images, funny to witty quotes, and asked listeners to voice their opinions. I&#39;ve come to enjoy those presentations and I decided to create my lecture following that trend.&lt;/p&gt;

&lt;p&gt;I started off with a series of questions about reproducible research and asked students to voice their opinions and to define a few key concepts. A couple were aware of the difference between reproducibility and replicability, but most were not. I also questioned them and presented them verbally with some famous cases, so they could realize that it&#39;s a fairly complicated matter. Next I presented some answers and definitions from the &lt;a href=&#34;https://osf.io/s9tya/wiki/home/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Implementing Reproducible Research&lt;/em&gt;&lt;/a&gt; book.&lt;/p&gt;

&lt;p&gt;Specifically talking about &lt;code&gt;R&lt;/code&gt;, I showed the students several documents I&#39;ve created in the past and asked whether they thought that they could reproduce the results or not. Basically, I wanted to highlight that when using &lt;code&gt;R&lt;/code&gt;, you really need the session information if you want to reproduce something. Specially if the analysis involves packages under heavy development.&lt;/p&gt;

&lt;p&gt;After having motivating the need for reproducible documents, I briefly showed what &lt;code&gt;rmarkdown&lt;/code&gt; is with some images from RStudio shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmarkdown.rstudio.com/images/markdownOverview.png&#34; alt=&#34;Markdown overview&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmarkdown.rstudio.com/images/markdownChunk.png&#34; alt=&#34;Markdown and R&#34; /&gt;&lt;/p&gt;

&lt;p&gt;That gave the students a general idea of how these documents look when you are writing them. But the most important part was showing them examples of how the resulting documents look like. That is, I showed them some complicated projects so they could imagine doing one themselves. The examples included some books, but given the audience I think that the one that motivated them most was Alyssa Frazee&#39;s &lt;code&gt;polyester&lt;/code&gt; reproducible paper (check the &lt;a href=&#34;https://github.com/leekgroup/polyester_code/blob/master/polyester_manuscript.Rmd&#34; target=&#34;_blank&#34;&gt;source here&lt;/a&gt;). I also showed them some of the cool stuff you can create with HTML documents: basically adding interactive elements.&lt;/p&gt;

&lt;p&gt;From there, we left the presentation and I demo&#39;ed how to use RStudio to write &lt;code&gt;rmarkdown&lt;/code&gt; documents, the Markdown syntax, where to find help, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dgdc5.digitalgameslearning.org/dgdc_5th/wp-content/uploads/lc.png&#34; alt=&#34;Lets code&#34; /&gt;&lt;/p&gt;

&lt;p&gt;By this point, I think the lecture was quite complete and the students were motivated. However, from my past experience, I&#39;ve come to realize that students will easily forget a topic if they don&#39;t practice doing it. That is why even before making the lecture I spent quite a bit of time designing two practice labs. Both labs involved creating a &lt;code&gt;rmarkdown&lt;/code&gt; document.&lt;/p&gt;

&lt;p&gt;The first lab included some cool illusion plots which involved a lot of &lt;code&gt;R&lt;/code&gt; code. The code wasn&#39;t the point, but simply learning some of the basics such as what is a code chunk, some of Markdown&#39;s syntax, specifying some code chunk options, adding the session information, and using inline &lt;code&gt;R&lt;/code&gt; code to show the date when the document was made. Ahh, and of course, uploading your HTML document to &lt;a href=&#34;http://rpubs.com/&#34; target=&#34;_blank&#34;&gt;RPubs&lt;/a&gt; (see &lt;a href=&#34;http://rpubs.com/lcollado/illussion2015&#34; target=&#34;_blank&#34;&gt;mine&lt;/a&gt;). I know that not everyone is a fan of RPubs, but I imagined that students would get super excited that they made something that they could then show their colleagues and friends. And some did!&lt;/p&gt;

&lt;p&gt;Sadly, we didn&#39;t have enough time for the second lab. I did explain to the students what it was about, but they didn&#39;t have time to do it themselves. For this second document, I wanted the students to learn how to create a document reporting some results where all the numbers in the text are written by &lt;code&gt;R&lt;/code&gt; instead of copy-pasting them.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;As you can see, I enjoyed thinking what to teach and specially how to teach a short topic to beginner &lt;code&gt;R&lt;/code&gt; students. Thanks to having one of the later sessions, I could teach them how to use &lt;code&gt;rmarkdown&lt;/code&gt; in a way that hopefully left them highly motivated to do it themselves. I hope that most of them will take that they learned in that module and others and apply them in their day to day work.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;You can find the lecture itself &lt;a href=&#34;http://www.aejaffe.com/summerR_2015/modules/module12.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; but like I said earlier, it was designed for class and not for being used as a reference. However, the &lt;a href=&#34;http://www.aejaffe.com/summerR_2015/labs/module12_lab.R&#34; target=&#34;_blank&#34;&gt;lab&lt;/a&gt; and it&#39;s &lt;a href=&#34;http://www.aejaffe.com/summerR_2015/labs/mapping_module_labkey.R&#34; target=&#34;_blank&#34;&gt;key&lt;/a&gt; might be more useful.&lt;/p&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-knitcitations&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2015&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-rmarkdown&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-rmarkdown&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
J. Allaire, J. Cheng, Y. Xie, J. McPherson, et al.
&lt;em&gt;rmarkdown: Dynamic Documents for R&lt;/em&gt;.
R package version 0.7.
2015.
URL: &lt;a href=&#34;http://CRAN.R-project.org/package=rmarkdown&#34;&gt;http://CRAN.R-project.org/package=rmarkdown&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-knitcitations&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-knitcitations&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;em&gt;knitcitations: Citations for Knitr Markdown Files&lt;/em&gt;.
R package version 1.0.6.
2015.
URL: &lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34;&gt;http://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use hidden advanced arguments for user-friendly functions</title>
      <link>http://lcolladotor.github.io/2014/12/11/dots/</link>
      <pubDate>Thu, 11 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/12/11/dots/</guid>
      <description>

&lt;h2 id=&#34;as-a-user&#34;&gt;As a user&lt;/h2&gt;

&lt;p&gt;Imagine that you are starting to learn how to use a specific &lt;code&gt;R&lt;/code&gt; package, lets call it &lt;code&gt;foo&lt;/code&gt;. You will look at the vignette (if there is one), use &lt;code&gt;help(package = foo)&lt;/code&gt;, or look at the reference manual (for example, &lt;a href=&#34;http://cran.r-project.org/web/packages/devtools/devtools.pdf&#34; target=&#34;_blank&#34;&gt;devtools&#39; ref man&lt;/a&gt;). Eventually, you will open the help page for the function(s) you are interested in using.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;?function_I_want_to_use
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In many packages, there is a main use case that is addressed by the package. A common strategy is to export a main function. That function will likely have a long list of arguments. So as a new user, you are suddenly exposed to a complicated help page and you will want to figure out which arguments you need to use.&lt;/p&gt;

&lt;h2 id=&#34;as-a-developer&#34;&gt;As a developer&lt;/h2&gt;

&lt;p&gt;From the developer&#39;s side, you want to give users control over several details. Each detail you want the user to control involves one more argument in your function. Sooner rather than later, you will have a long list of arguments. This increases the learning curve for new users of your package, and can potentially scare them away. That is contradictory of another goal you have as a developer: you want to get people to use your package.&lt;/p&gt;

&lt;p&gt;Lets say that you are developing the function &lt;code&gt;use_me()&lt;/code&gt;. If the details you want the users to control are actually arguments of other functions used inside &lt;code&gt;use_me()&lt;/code&gt;, then you can simplify your function by using the &lt;code&gt;...&lt;/code&gt; argument. This argument is very well explained at &lt;a href=&#34;http://www.burns-stat.com/the-three-dots-construct-in-r/&#34; target=&#34;_blank&#34;&gt;The three-dots construct in R&lt;/a&gt; &lt;a id=&#39;cite-greycite20763&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://www.burns-stat.com/the-three-dots-construct-in-r/&#39;&gt;Burns, 2013&lt;/a&gt;). It is very useful and can greatly simplify your life as a developer. Plus, it reduces the length of your help pages, thus making your package more user friendly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2014-12-11-dots/unnamed-chunk-2-1.png&#34; alt=&#34;center&#34; /&gt;&lt;/p&gt;

&lt;p&gt;However, if some of the details in &lt;code&gt;use_me()&lt;/code&gt; are not arguments to other functions, then the common strategy is to write two functions. One is a low level function with arguments for all the details which might or might not export. Then, you write a second function that is a wrapper for the low level function and pre-specifies values for all the details. See the next minimal example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Don&#39;t export this function
.use_me &amp;lt;- function(arg1, arg2, verbose = TRUE) {
    if(verbose) message(paste(Sys.time(), &#39;working&#39;))
    pmax(arg1, arg2)
}

#&#39; @export
use_me &amp;lt;- function(arg1, ...) {
    .use_me(arg1, 0, ...)
}

## Lets see it in action
use_me(1:3)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 2014-12-11 17:03:32 working
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 1 2 3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_me(-1:1, verbose = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 0 0 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, the help page for &lt;code&gt;use_me()&lt;/code&gt; is fairly short and friendly. You don&#39;t expect users to be interested in changing &lt;code&gt;arg2&lt;/code&gt; much. Surely you could make it so the non-exported function &lt;code&gt;.use_me()&lt;/code&gt; sets a default value for &lt;code&gt;arg2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another strategy is to specify inside &lt;code&gt;use_me()&lt;/code&gt; the default values for all the arguments you want to use while keeping the list of visible arguments short. That is, maintain the user friendliness of your functions while also giving them control over all the details. That is what you can do using &lt;code&gt;dots()&lt;/code&gt; from &lt;code&gt;dots&lt;/code&gt; &lt;a id=&#39;cite-dots&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/lcolladotor/dots&#39;&gt;Collado-Torres, 2014&lt;/a&gt;). &lt;code&gt;dots()&lt;/code&gt; is a very simple function that checks if &lt;code&gt;...&lt;/code&gt; has a specific argument, and if absent, it returns a default value. It can be seen in action below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&#39;dots&#39;)
use_me_dots &amp;lt;- function(arg1, ...) {
    ## Default hidden arguments
    arg2 &amp;lt;- dots(name = &#39;arg2&#39;, value = 0, ...)
    verbose &amp;lt;- dots(&#39;verbose&#39;, TRUE, ...)
    
    ## Regular code
    if(verbose) message(paste(Sys.time(), &#39;working&#39;))
    pmax(arg1, arg2)
}
use_me_dots(1:3)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 2014-12-11 17:03:32 working
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 1 2 3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_me_dots(-1:1, verbose = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 0 0 1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_me_dots(-1:1, verbose = FALSE, arg2 = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 5 5 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;dots&lt;/code&gt; is my solution to the problem of keeping functions user friendly while giving them control over all the details. The idea is that experienced users will be able to find what the advanced arguments are. While they could find them from the code itself, I do recommend describing the advanced arguments in a vignette targeted for these users.&lt;/p&gt;

&lt;h2 id=&#34;complications&#34;&gt;Complications&lt;/h2&gt;

&lt;p&gt;Now, while &lt;code&gt;...&lt;/code&gt; is great, you might run into problems when &lt;code&gt;use_me()&lt;/code&gt; calls two functions that have different arguments and that don&#39;t have the &lt;code&gt;...&lt;/code&gt; argument. Such a scenario is illustrated below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;status &amp;lt;- function(arg3, status = TRUE) {
    if(status) print(arg3)
    return(invisible(NULL))
}
use_me_again &amp;lt;- function(arg1, ...) {
    res &amp;lt;- .use_me(arg1, 0, ...)
    status(res, ...)
    return(res)
}

## Seems to work
x &amp;lt;- use_me_again(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 2014-12-11 17:03:32 working
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## But nope, it doesn&#39;t
use_me_again(1, verbose = FALSE, status = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Error in .use_me(arg1, 0, ...): unused argument (status = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This scenario can happen when you are using functions from other packages. It&#39;s happened to me in cases where the main function does have a &lt;code&gt;...&lt;/code&gt; argument but uses several internal functions that don&#39;t use it.&lt;/p&gt;

&lt;p&gt;In such situations, you might want to use &lt;code&gt;formal_call()&lt;/code&gt; from &lt;code&gt;dots&lt;/code&gt;. It figures out which are the arguments formally used by the function of interest and drops out un-used arguments from &lt;code&gt;...&lt;/code&gt;, thus avoiding this type of problem.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_me_fixed &amp;lt;- function(arg1, ...) {
    res &amp;lt;- formalCall(.use_me, arg1 = arg1, arg2 = 0, ...)
    formal_call(status, arg3 = res, ...)
    return(res)
}

## Works now!
use_me_fixed(1, verbose = FALSE, status = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a more complicated example, see the &lt;a href=&#34;http://lcolladotor.github.io/dots/dots.html#Complex_example&#34; target=&#34;_blank&#34;&gt;dots complex example in the vignette&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;As a developer, it is possible to keep your functions user friendly while giving experienced users the option to control the fine tuning arguments which you don&#39;t expect most users will want to tweak. My solution to this problem is implemented in &lt;a href=&#34;https://github.com/lcolladotor/dots&#34; target=&#34;_blank&#34;&gt;dots&lt;/a&gt; (check it&#39;s &lt;a href=&#34;http://lcolladotor.github.io/dots/&#34; target=&#34;_blank&#34;&gt;vignette&lt;/a&gt;). I&#39;d love to hear what you think about it! I am specially interested on what users think about the idea of hidden advanced arguments (documented in an advanced users vignette).&lt;/p&gt;

&lt;p&gt;I might try to get &lt;code&gt;dots&lt;/code&gt; into a repository: probably in &lt;a href=&#34;http://www.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;Bioconductor&lt;/a&gt; since most of the &lt;code&gt;dots&lt;/code&gt; code was first implemented for &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/derfinder.html&#34; target=&#34;_blank&#34;&gt;derfinder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PS I just found a similar function to &lt;code&gt;dots()&lt;/code&gt;. It&#39;s &lt;code&gt;berryFunctions::owa()&lt;/code&gt; and you can find its &lt;a href=&#34;https://github.com/BerryBoessenkool/berryFunctions/blob/master/R/owa.r&#34; target=&#34;_blank&#34;&gt;code here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-knitcitations&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/cboettig/knitcitations&#39;&gt;Boettiger, 2014&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-knitcitations&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-knitcitations&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;em&gt;knitcitations: Citations for knitr markdown files&lt;/em&gt;.
R package version 1.0.4.
2014.
URL: &lt;a href=&#34;https://github.com/cboettig/knitcitations&#34;&gt;https://github.com/cboettig/knitcitations&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-greycite20763&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-greycite20763&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
P. Burns.
&lt;em&gt;The three-dots construct in R - Burns Statistics&lt;/em&gt;.
&lt;a href=&#34;http://www.burns-stat.com/the-three-dots-construct-in-r/&#34;&gt;http://www.burns-stat.com/the-three-dots-construct-in-r/&lt;/a&gt;.
2013.
URL: &lt;a href=&#34;http://www.burns-stat.com/the-three-dots-construct-in-r/&#34;&gt;http://www.burns-stat.com/the-three-dots-construct-in-r/&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-dots&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-dots&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt;
L. Collado-Torres.
&lt;em&gt;dots: Simplifying function calls&lt;/em&gt;.
R package version 1.0.0.
2014.
URL: &lt;a href=&#34;https://github.com/lcolladotor/dots&#34;&gt;https://github.com/lcolladotor/dots&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Reproducibility info
library(&#39;devtools&#39;)
options(width = 120)
session_info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Session info-----------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  setting  value                                             
##  version  R Under development (unstable) (2014-11-01 r66923)
##  system   x86_64, darwin10.8.0                              
##  ui       X11                                               
##  language (EN)                                              
##  collate  en_US.UTF-8                                       
##  tz       America/New_York
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Packages---------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  package       * version  date       source                                 
##  bibtex          0.3.6    2013-07-29 CRAN (R 3.2.0)                         
##  devtools      * 1.6.1    2014-10-07 CRAN (R 3.2.0)                         
##  digest          0.6.4    2013-12-03 CRAN (R 3.2.0)                         
##  dots          * 1.0.0    2014-11-14 Github (lcolladotor/dots@a933540)      
##  evaluate        0.5.5    2014-04-29 CRAN (R 3.2.0)                         
##  formatR         1.0      2014-08-25 CRAN (R 3.2.0)                         
##  httr            0.5      2014-09-02 CRAN (R 3.2.0)                         
##  knitcitations * 1.0.4    2014-11-03 Github (cboettig/knitcitations@508de74)
##  knitr         * 1.7      2014-10-13 CRAN (R 3.2.0)                         
##  lubridate       1.3.3    2013-12-31 CRAN (R 3.2.0)                         
##  memoise         0.2.1    2014-04-22 CRAN (R 3.2.0)                         
##  plyr            1.8.1    2014-02-26 CRAN (R 3.2.0)                         
##  RColorBrewer  * 1.0.5    2011-06-17 CRAN (R 3.2.0)                         
##  Rcpp            0.11.3   2014-09-29 CRAN (R 3.2.0)                         
##  RCurl           1.95.4.3 2014-07-29 CRAN (R 3.2.0)                         
##  RefManageR      0.8.40   2014-10-29 CRAN (R 3.2.0)                         
##  RJSONIO         1.3.0    2014-07-28 CRAN (R 3.2.0)                         
##  rstudioapi      0.1      2014-03-27 CRAN (R 3.2.0)                         
##  stringr         0.6.2    2012-12-06 CRAN (R 3.2.0)                         
##  XML             3.98.1.1 2013-06-20 CRAN (R 3.2.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wrote &lt;code&gt;dots&lt;/code&gt; a month ago and the post itself today during our bi-weekly blog meeting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An xpd-tion into R plot margins</title>
      <link>http://lcolladotor.github.io/2014/11/21/add-logo-in-R/</link>
      <pubDate>Fri, 21 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/11/21/add-logo-in-R/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This is a guest post by &lt;a href=&#34;http://www.biostat.jhsph.edu/~prpatil/&#34; target=&#34;_blank&#34;&gt;Prasad Patil&lt;/a&gt; that answers the question: how to put a shape in the margin of an R plot?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The help page for &lt;strong&gt;R&lt;/strong&gt;&#39;s &lt;code&gt;par()&lt;/code&gt; function is a somewhat impenetrable list
of abbreviations that allow you to manipulate anything and everything
in the plotting device. You may have used this function in the past
to create an array of plots (using &lt;code&gt;mfrow&lt;/code&gt; or &lt;code&gt;mfcol&lt;/code&gt;) or to set margins
(&lt;code&gt;mar&lt;/code&gt; or &lt;code&gt;mai&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Way down toward the end of the list is the often-overlooked &lt;code&gt;xpd&lt;/code&gt; parameter.
This value specifies where in the plotting device an object can actually
be plotted. The default is &lt;code&gt;xpd = FALSE&lt;/code&gt;, which means that plotting is clipped,
or restricted, to the plotting region. In other words, if your plot has
&lt;code&gt;xlim = c(0, 10)&lt;/code&gt; and &lt;code&gt;ylim = c(0, 10)&lt;/code&gt; and you try to plot the point (-1,  -1), it will
not appear anywhere in the device.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xpd&lt;/code&gt; takes two other values, &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;NA&lt;/code&gt;, which limit plotting to the figure
and device region, respectively. If you&#39;re fuzzy on plotting terms, &lt;a href=&#34;http://research.stowers-institute.org/mcm/efg/R/Graphics/Basics/mar-oma/index.htm&#34; target=&#34;_blank&#34;&gt;this
tutorial&lt;/a&gt;
presents those topics well.&lt;/p&gt;

&lt;h2 id=&#34;plotting-outside-the-plot&#34;&gt;Plotting outside the plot&lt;/h2&gt;

&lt;p&gt;If you want to plot outside of the plotting region, I find that setting &lt;code&gt;xpd = NA&lt;/code&gt;
easiest since it opens up all external space. We also need to make sure that we
keep space outside of the plot so that we have room to place our objects. Let&#39;s
say we want to put an ugly border above and below our plot:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Set xpd=NA and expand the top and bottom margins
par(xpd = NA, mar = par()$mar + c(2.5, 0, 1, 0))
plot(1:10)
# Note that the rectangle we make here has corner coordinates outside of
# our plotting device
rect(-5, 11, 12, 14, col=&amp;quot;red&amp;quot;)
# Random dots in our rectangluar region
points(runif(100, -4.2, 12.8), runif(100, 11.2, 13.6), col = &amp;quot;green&amp;quot;, pch = 19, cex = 1.2)
# And another rectangle for below
rect(-5, -1.7, 12, -3.5, col=&amp;quot;red&amp;quot;)
points(runif(100, -4.2, 12.8), runif(100, -3.3, -1.8), col = &amp;quot;green&amp;quot;, pch = 19, cex = 1.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2014-11-21-add-logo-in-R/plot-1.png&#34; alt=&#34;center&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here we mentally extend the axes of our plot to determine where to put
our margin elements. One can imagine a diagonal for the top rectangle
running from (-5,11) to (12,14). Neither of these points appear in the plot
itself, but we used the established axes to estimate them and plot outside
the plotting region.&lt;/p&gt;

&lt;h2 id=&#34;images-outside-the-plot&#34;&gt;Images outside the plot&lt;/h2&gt;

&lt;p&gt;Now let&#39;s say we want to &lt;strong&gt;add a logo&lt;/strong&gt; or other external image in the margin
of our plot. We will use &lt;strong&gt;R&lt;/strong&gt;&#39;s &lt;code&gt;png&lt;/code&gt; library to load a PNG image and
&lt;code&gt;rasterImage()&lt;/code&gt; to plot it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## If needed: install.packages(&amp;quot;png&amp;quot;)
library(png)
img &amp;lt;- readPNG(&amp;quot;logo.png&amp;quot;)
par(xpd = NA, mar=par()$mar + c(3, 0, 0, 0))
plot(1:10)
rasterImage(img, 0.5, -2.5, 10.5, -1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2014-11-21-add-logo-in-R/imgplot-1.png&#34; alt=&#34;center&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here we used the &lt;code&gt;png&lt;/code&gt; library and the &lt;code&gt;r
asterImage()&lt;/code&gt; command to read in and
plot the &lt;a href=&#34;http://lcolladotor.github.io/figs/2014-11-21-add-logo-in-R/logo.png&#34; target=&#34;_blank&#34;&gt;&amp;quot;logo.png&amp;quot;&lt;/a&gt; file. Based on the previously-known dimensions of the
logo, we can choose which points to use as endpoints for the image. Note
that this image may appear stretched or contorted depending on the size
of your &lt;strong&gt;R&lt;/strong&gt; plot device, and it will not stay consistent if you resize.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where do I start using Bioconductor?</title>
      <link>http://lcolladotor.github.io/2014/10/16/startBioC/</link>
      <pubDate>Thu, 16 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/10/16/startBioC/</guid>
      <description>

&lt;p&gt;I was recently asked &lt;em&gt;where do I get started with Bioconductor?&lt;/em&gt; and thought this would be a good short post.&lt;/p&gt;

&lt;h2 id=&#34;what-is-bioc&#34;&gt;What is BioC?&lt;/h2&gt;

&lt;p&gt;Briefly, Bioconductor &lt;a id=&#39;cite-bioc&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://genomebiology.com/2004/5/10/R80&#39;&gt;Gentleman, Carey, Bates, and others, 2004&lt;/a&gt;) is an open source project that hosts a wide range of tools for analyzing biological data with &lt;code&gt;R&lt;/code&gt; &lt;a id=&#39;cite-R&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://www.R-project.org/&#39;&gt;R Core Team, 2014&lt;/a&gt;). These analysis tools are bundled into packages which are designed to answer specific questions or to provide key infrastructure. If this sounds like something you are interested in, visit &lt;a href=&#34;http://www.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;bioconductor.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Obviously, you need to know the basics about &lt;code&gt;R&lt;/code&gt; in order to use Bioconductor.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://www.bioconductor.org&#34;&gt;&lt;img src=&#34;http://www.bioconductor.org/images/logo_bioconductor.gif&#34; alt=&#34;BioconductorLogo&#34; style=&#34;width: 260px;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;bioconductor.org&lt;/a&gt; has a section in it&#39;s front page titled &lt;em&gt;get started with Bioconductor&lt;/em&gt;. There you will find links that explain how to install it or to explore the available packages.&lt;/p&gt;

&lt;h3 id=&#34;you-have-a-use-case&#34;&gt;You have a use case&lt;/h3&gt;

&lt;p&gt;If you have a particular use case in mind, I recommend &lt;a href=&#34;http://www.bioconductor.org/packages/release/BiocViews.html#___Software&#34; target=&#34;_blank&#34;&gt;browsing the software packages&lt;/a&gt; and searching for some key words. For example, you might be interested in &lt;em&gt;high throughput sequencing of RNAs&lt;/em&gt; and if you search &lt;em&gt;RNAseq&lt;/em&gt; or &lt;em&gt;RNA-seq&lt;/em&gt; you can find a good set of packages to start. Alternatively, use the &lt;em&gt;biocViews&lt;/em&gt; tree menu to explore specific categories of packages.&lt;/p&gt;

&lt;p&gt;Once you find a set of packages that have descriptions that appeal to you, explore their &lt;a href=&#34;http://www.bioconductor.org/help/package-vignettes/&#34; target=&#34;_blank&#34;&gt;vignettes&lt;/a&gt;. These are either PDF or HTML documents that explain what the package does to new users. They also exemplify how to tie together the different functions in the package, which is a key piece of information. For example, in the &lt;em&gt;RNA-seq&lt;/em&gt; example you will find the &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/DEXSeq.html&#34; target=&#34;_blank&#34;&gt;DEXSeq&lt;/a&gt; package. &lt;code&gt;DEXseq&lt;/code&gt; &lt;a id=&#39;cite-DEXseq&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://dx.doi.org/10.1101/gr.133744.111&#39;&gt;Anders, Reyes, and Huber, 2012&lt;/a&gt;) has a vignette called &lt;em&gt;Analyzing RNA-seq data for differential exon usage with the &amp;quot;DEXSeq&amp;quot; package&lt;/em&gt; and from the page of the package you can access the &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/vignettes/DEXSeq/inst/doc/DEXSeq.pdf&#34; target=&#34;_blank&#34;&gt;PDF vignette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then it&#39;s just a matter of exploring other packages, checking the vignettes and learning as you go.&lt;/p&gt;

&lt;h3 id=&#34;you-don-t-have-a-use-case&#34;&gt;You don&#39;t have a use case&lt;/h3&gt;

&lt;p&gt;If you don&#39;t have a specific use case in mind, it might pay off to start by exploring the &lt;a href=&#34;http://www.bioconductor.org/help/workflows/&#34; target=&#34;_blank&#34;&gt;Bioconductor workflows&lt;/a&gt;. These documents explain how to use different packages to accomplish specific type of analyses. They are great to learn what you can do with Bioconductor!&lt;/p&gt;

&lt;p&gt;Another option is to look at the previous &lt;a href=&#34;http://www.bioconductor.org/help/course-materials/&#34; target=&#34;_blank&#34;&gt;courses&lt;/a&gt;. For example, under the &lt;a href=&#34;http://www.bioconductor.org/help/course-materials/2008/&#34; target=&#34;_blank&#34;&gt;2008 courses&lt;/a&gt; you&#39;ll find to the course &lt;a href=&#34;http://www.lcg.unam.mx/~lcollado/R/&#34; target=&#34;_blank&#34;&gt;R/Bioconductor Curso Intensivo (Spanish)&lt;/a&gt; which I taught back in the day. As much as I would like to self promote myself, the best starting point is the most recent BioC20XX course: &lt;a href=&#34;http://www.bioconductor.org/help/course-materials/2014/BioC2014/&#34; target=&#34;_blank&#34;&gt;BioC2014&lt;/a&gt;. It has slides showcasing some of the newest packages and tutorials on how to use them.&lt;/p&gt;

&lt;p&gt;An alternative is to look at some of the &lt;a href=&#34;http://www.bioconductor.org/help/publications/&#34; target=&#34;_blank&#34;&gt;Bioconductor publications&lt;/a&gt; which includes books about Bioconductor and research papers describing some of the packages.&lt;/p&gt;

&lt;p&gt;Once you find a set of packages that catch your eye, go look at their vignettes just like I explained in the &lt;em&gt;you have a use case&lt;/em&gt; scenario.&lt;/p&gt;

&lt;h2 id=&#34;help-tips&#34;&gt;Help tips&lt;/h2&gt;

&lt;p&gt;It&#39;s not a matter of whether you will need help learning how to use Bioconductor. It&#39;s just a matter of when. So don&#39;t feel bad about having to ask for help!!&lt;/p&gt;

&lt;p&gt;The very first place to start is to look at &lt;a href=&#34;http://www.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;bioconductor.org&lt;/a&gt; at the &lt;em&gt;Help&lt;/em&gt; section in the bottom. For example, you can find youtube videos contributed under the &lt;a href=&#34;http://www.bioconductor.org/help/community/&#34; target=&#34;_blank&#34;&gt;community&lt;/a&gt; section. There you can also find links to other blog posts explaining how to use Bioconductor. Take a peak at the other sections under &lt;em&gt;Help&lt;/em&gt; before using the &lt;a href=&#34;https://support.bioconductor.org/&#34; target=&#34;_blank&#34;&gt;Bioconductor support site&lt;/a&gt;: it&#39;s where you can ask very specific questions and interact with the maintainers of the packages you are using.&lt;/p&gt;

&lt;p&gt;Finally, if you are interested in new developments, then check the &lt;em&gt;latest newsletter&lt;/em&gt;, for example the &lt;a href=&#34;http://www.bioconductor.org/help/newsletters/2014_October/&#34; target=&#34;_blank&#34;&gt;October 2014&lt;/a&gt; one.&lt;/p&gt;

&lt;p&gt;Good luck using Bioconductor!&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; &lt;a id=&#39;cite-knitcitations&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/cboettig/knitcitations&#39;&gt;Boettiger, 2014&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-DEXseq&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-DEXseq&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
S. Anders, A. Reyes and W. Huber.
&amp;ldquo;Detecting differential usage of exons from RNA-seq data.&amp;rdquo;
In: &lt;EM&gt;Genome Research&lt;/EM&gt; 22 (2012), p. 4025.
DOI: &lt;a href=&#34;http://dx.doi.org/10.1101/gr.133744.111&#34;&gt;10.1101/gr.133744.111&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-knitcitations&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-knitcitations&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;EM&gt;knitcitations: Citations for knitr markdown files&lt;/EM&gt;.
R package version 1.0.2.
2014.
URL: &lt;a href=&#34;https://github.com/cboettig/knitcitations&#34;&gt;https://github.com/cboettig/knitcitations&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-bioc&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-bioc&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt;
R. C. Gentleman, V. J. Carey, D. M. Bates and others.
&amp;ldquo;Bioconductor: Open software development for computational biology and bioinformatics&amp;rdquo;.
In: &lt;EM&gt;Genome Biology&lt;/EM&gt; 5 (2004), p. R80.
URL: &lt;a href=&#34;http://genomebiology.com/2004/5/10/R80&#34;&gt;http://genomebiology.com/2004/5/10/R80&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;bib-R&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-R&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt;
R Core Team.
&lt;EM&gt;R: A Language and Environment for Statistical Computing&lt;/EM&gt;.
R Foundation for Statistical Computing.
Vienna, Austria, 2014.
URL: &lt;a href=&#34;http://www.R-project.org/&#34;&gt;http://www.R-project.org/&lt;/a&gt;.&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&#34;want-more&#34;&gt;Want more?&lt;/h3&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Concerns that can deter potential orders for developing Shiny apps</title>
      <link>http://lcolladotor.github.io/2014/06/10/shiny-orders/</link>
      <pubDate>Tue, 10 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/06/10/shiny-orders/</guid>
      <description>

&lt;p&gt;A few weeks ago I was invited to a meeting where a group was interested in exploring options for replacing their contract with a propriety software. They invited me because they saw some resemblances between a &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; application I made and the features they need. It is a relatively small project and it seemed feasible to implement, but well, some details could have been tricky to code. During the meeting I explained what &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; is, showcased some of the &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; apps I&#39;ve made, and proposed some options including a simple site password.&lt;/p&gt;

&lt;p&gt;A few days after the meeting, they raised three concerns.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Privacy and security of their data. Specially with distribution of the site password.&lt;/li&gt;
&lt;li&gt;Technical support. They wanted something more than community support.&lt;/li&gt;
&lt;li&gt;Continuity of the project. Specially since their team might lack the technical expertise to support and modify the Shiny app after it is built.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are all valid concerns and they are not something I have dealt with or been concerned with other &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; apps I have deployed. Thus, I ended up finding more information and writing up a long reply which I am modifying into a post format here. If you identify other ways to approach these concerns that I missed, share the knowledge please!&lt;/p&gt;

&lt;h2 id=&#34;shiny-overview&#34;&gt;Shiny overview&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://lcolladotor.github.io/figs/2014-06-10-shiny-orders/HelloShiny.png&#34;&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2014-06-10-shiny-orders/HelloShiny.png&#34; alt=&#34;Workflow&#34; style=&#34;width: 458px;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; is an &lt;code&gt;R&lt;/code&gt; package that allows creating web applications with &lt;code&gt;R&lt;/code&gt;. A user opens the app on their browser, specifies a given set of inputs, these are transmitted to an &lt;code&gt;R&lt;/code&gt; session, some code is evaluated with the input options, output is produced and transmitted back to the browser. Because it is so easy to use and useful, it has been very popular. That is the gist of it!&lt;/p&gt;

&lt;h2 id=&#34;deploying-a-shiny-app&#34;&gt;Deploying a Shiny app&lt;/h2&gt;

&lt;p&gt;Once you develop a &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; app, you have to deploy it on a server so users can access it through their browsers. Here I describe several options to do so.&lt;/p&gt;

&lt;p&gt;The application itself needs &amp;quot;Shiny Server&amp;quot; to run. An implementation of Shiny Server is free via &lt;a href=&#34;http://shinyapps.io/&#34; target=&#34;_blank&#34;&gt;ShinyApps&lt;/a&gt; (&lt;strong&gt;option 1&lt;/strong&gt;) or if you have your own server you can install the open source version of Shiny Server (&lt;strong&gt;option 2&lt;/strong&gt;). Alternatively, you can pay for Shiny Server Pro and also install it in your own server (&lt;strong&gt;option 3&lt;/strong&gt;). Note that glimmer.rstudio.com is previous version of &lt;a href=&#34;http://shinyapps.io/&#34; target=&#34;_blank&#34;&gt;ShinyApps&lt;/a&gt; and you can no longer get accounts on this server.&lt;/p&gt;

&lt;p&gt;Option 1 has the advantage of being completely free and that there is no need to pay for your own server. It does rely on &lt;a href=&#34;http://shinyapps.io/&#34; target=&#34;_blank&#34;&gt;ShinyApps&lt;/a&gt; being online, which should not be a main problem since it is hosted on the cloud. Meaning that it is supposed to be robust.&lt;/p&gt;

&lt;p&gt;Option 2 has the advantage of having technical support for the server (not the app) from whoever is providing the server (could be a company or the school). However, you need to have someone capable of installing Shiny Server and updating it whenever it&#39;s necessary to do so.&lt;/p&gt;

&lt;p&gt;Option 3 allows you to have high level password security (via SSL) to any Shiny app you host. Plus &lt;a href=&#34;http://www.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt; provides technical support for Shiny. The server technical support would still have to come from whoever is providing the server. The main disadvantage is that this option is very expensive (even with the academic pricing discount).&lt;/p&gt;

&lt;p&gt;Here is some information you might be interested on checking about Shiny:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rstudio.com/shiny/&#34; target=&#34;_blank&#34;&gt;Main site for Shiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rstudio.com/shiny/server/&#34; target=&#34;_blank&#34;&gt;Description for Shiny Server and Shiny Server Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rstudio.com/shiny/commercial/academic-pricing&#34; target=&#34;_blank&#34;&gt;Academic pricing for Shiny Server Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rstudio.com/shiny/hosted/&#34; target=&#34;_blank&#34;&gt;Description of ShinyApps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Site for learning how to code a web app using Shiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.rstudio.com/gallery/&#34; target=&#34;_blank&#34;&gt;Examples of Shiny apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;concerns&#34;&gt;Concerns&lt;/h2&gt;

&lt;h3 id=&#34;privacy&#34;&gt;Privacy&lt;/h3&gt;

&lt;p&gt;Privacy issues in terms of password sharing can be limited by changing the password frequently. Privacy in terms of protection versus hacking is a different subject and I could implement something like &lt;a href=&#34;http://spark.rstudio.com/withr/authentication/&#34; target=&#34;_blank&#34;&gt;this demo&lt;/a&gt; (username: withr, password: 12345678) as described in this &lt;a href=&#34;http://withr.me/blog/2014/02/14/encrypt-users-password-with-md5-for-you-shiny-app/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt;. However, if you want further protection vs hacking, you would need Shiny Server Pro. &lt;a href=&#34;http://shiny.rstudio.com/gallery/authentication-and-database.html&#34; target=&#34;_blank&#34;&gt;Here is a demo&lt;/a&gt; of the security provided by Shiny Server Pro  (with multiple users too). I understand that hacking was not the main concern you had, but well, as I said password-sharing can be mitigated by frequent changes to the app site.&lt;/p&gt;

&lt;h3 id=&#34;technical-support&#34;&gt;Technical support&lt;/h3&gt;

&lt;p&gt;I mostly answered the different options regarding technical support when I described the three options for deploying a Shiny app. As for getting support from IT, they would need to learn how to use Shiny.&lt;/p&gt;

&lt;h3 id=&#34;continuity&#34;&gt;Continuity&lt;/h3&gt;

&lt;p&gt;Shiny is one of the most important projects for &lt;a href=&#34;http://www.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt; so they invest a lot in it, the community provides great answers very quickly, and a lot of people are learning how to use it. If you need an R programmer later on instead of a student, you could describe the job at &lt;a href=&#34;http://www.r-users.com/&#34; target=&#34;_blank&#34;&gt;R Users&lt;/a&gt; and employ someone that way. As far as the Biostats department is concerned, I know that several students are using Shiny and some have even published Shiny Apps in the academic literature. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.rstudio.com/mrosenblum/interAdapt/&#34; target=&#34;_blank&#34;&gt;interAdapt&lt;/a&gt; is a Shiny app written by Aaron Fisher (Biostats student) and published &lt;a href=&#34;http://biostats.bepress.com/jhubiostat/paper262/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;shinymethyl, a shiny application developed by Jean-Philippe Fortin described &lt;a href=&#34;http://shinymethyl.com/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; with a &lt;a href=&#34;http://spark.rstudio.com/jfortin/shinyMethyl/&#34; target=&#34;_blank&#34;&gt;demo here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alyssafrazee.shinyapps.io/committees/&#34; target=&#34;_blank&#34;&gt;committees&lt;/a&gt; is a Shiny app made by Alyssa Frazee for verifying your school oral and/or defense committees. It&#39;s described in &lt;a href=&#34;http://alyssafrazee.com/committee-checker-2.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://muschellij2.shinyapps.io/ENAR_2014&#34; target=&#34;_blank&#34;&gt;ENAR 2014&lt;/a&gt; is a Shiny app made by John Muschelli for the ENAR2014 conference which allowed you to quickly identify talks you might be interested in. It&#39;s described in &lt;a href=&#34;http://hopstat.wordpress.com/2014/03/12/enar-2014-searcher-enar2014/&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;branding&#34;&gt;Branding&lt;/h3&gt;

&lt;p&gt;Regarding branding, a Shiny App can be embedded on a website. For illustrating this, I embedded two apps I made &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/testShiny.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;In the end, this group decided to use something else instead of a &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; app for now. I do not know exactly why they made that decision, but I can see that their concerns are probably shared with other potential &lt;a href=&#34;http://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; users. These concerns are a challenge &lt;a href=&#34;http://www.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt; must be dealing with and I am curious to know how they would have approached them.&lt;/p&gt;

&lt;h4 id=&#34;want-more&#34;&gt;Want more?&lt;/h4&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post is part of the summer 2014 &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt;&#39; iron blogger challenge.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple mortgage calculator</title>
      <link>http://lcolladotor.github.io/2014/04/22/mortgage-calculator-flexible-payments/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/04/22/mortgage-calculator-flexible-payments/</guid>
      <description>

&lt;p&gt;Have you ever thought of borrowing some money? A common case is when you have to borrow money for buying a house, which is called a mortgage. Wikipedia (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Mortgage loan - Wikipedia, the free encyclopedia.&#39; .&#34;&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Mortgage_loan&#34;&gt;&#39;Mortgage loan&#39; entry&lt;/a&gt;&lt;/span&gt;) goes into much more detail about the definition than what I&#39;ll cover.&lt;/p&gt;

&lt;p&gt;One of the aspects you have to evaluate when considering a loan such as a mortgage is how much interest you will be charged and how long the loan will be. Those two determine your monthly payment.&lt;/p&gt;

&lt;h2 id=&#34;comparing-loans&#34;&gt;Comparing loans&lt;/h2&gt;

&lt;p&gt;That is, given the loan amount, you can compare different loans that offer different rates and/or loan lengths. There are many tools out there that allow you to do so and are generally called mortgage calculators. Although the more detailed term is amortization calculator. From wikipedia(&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Amortization calculator - Wikipedia, the free encyclopedia.&#39; .&#34;&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Amortization_calculator&#34;&gt;&#39;Amortization calculator&#39; entry&lt;/a&gt;&lt;/span&gt;) we find the so called annuity formula which helps you calculate your monthly payment.&lt;/p&gt;

&lt;p&gt;Several such mortgage calculators have been features in &lt;a href=&#34;http://www.r-bloggers.com/&#34; target=&#34;_blank&#34;&gt;R Bloggers&lt;/a&gt; before such as (&lt;span class=&#34;showtooltip&#34; title=&#34;C (2010). &#39;Mortgage Calculator (and Amortization Charts) with R.&#39; .&#34;&gt;&lt;a href=&#34;http://www.r-chart.com/2010/11/mortgage-calculator-and-amortization.html&#34;&gt;C, 2010&lt;/a&gt;&lt;/span&gt;) and (&lt;span class=&#34;showtooltip&#34; title=&#34;BioStatMatt (2014). &#39;Mortgage Refinance Calculator | BioStatMatt.&#39; .&#34;&gt;&lt;a href=&#34;http://biostatmatt.com/archives/1908&#34;&gt;BioStatMatt&lt;/a&gt;&lt;/span&gt;). Plus there are many other alternatives on the web.&lt;/p&gt;

&lt;h2 id=&#34;my-use-case&#34;&gt;My use case&lt;/h2&gt;

&lt;p&gt;However, a month or so ago I got curious about comparing some loans which had a different twist than normal. Given some circumstances, I wanted to compare some loans where the loaner is willing to receive payments every few months yet with interests being compounded (that is, calculated) on a different time frame. Obviously, the easiest would be to compound interest at the same frequency as payments are made. Plus, probably most banks would not offer such flexible loans.&lt;/p&gt;

&lt;p&gt;Digging around, I did find modifications to the annuity formula that allow non-monthly payments (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Compound Interest Calculator.&#39; .&#34;&gt;&lt;a href=&#34;http://www.calculator.net/compound-interest-calculator.html&#34;&gt;Compound Interest Formula&lt;/a&gt;&lt;/span&gt;) and (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Compound Interest.&#39; .&#34;&gt;&lt;a href=&#34;http://math.about.com/library/weekly/aa042002a.htm&#34;&gt;What is compound interest?&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;h2 id=&#34;shiny-app&#34;&gt;shiny app&lt;/h2&gt;

&lt;p&gt;Being interested in &lt;code&gt;R&lt;/code&gt; code, &lt;a href=&#34;http://www.rstudio.com/shiny/&#34; target=&#34;_blank&#34;&gt;shiny&lt;/a&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;RStudio and Inc. (2014). shiny: Web Application Framework for R. R package version 0.9.1.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=shiny&#34;&gt;RStudio Inc.&lt;/a&gt;&lt;/span&gt;) apps and trying out integrating &lt;a href=&#34;http://rcharts.io/&#34; target=&#34;_blank&#34;&gt;rCharts&lt;/a&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Vaidyanathan R (2013). rCharts: Interactive Charts using Polycharts.js. R package version 0.4.2.&#34;&gt;&lt;a href=&#34;&#34;&gt;Vaidyanathan, 2013&lt;/a&gt;&lt;/span&gt;) with shiny, I ended up coding my own mortgage calculator which you can find &lt;a href=&#34;http://glimmer.rstudio.com/lcolladotor/mortgage/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Simple Mortgage Calculator.&#39; .&#34;&gt;&lt;a href=&#34;http://glimmer.rstudio.com/lcolladotor/mortgage/&#34;&gt;Simple Mortage Calculator&lt;/a&gt;&lt;/span&gt;). The code is publicly available at &lt;a href=&#34;https://github.com/lcolladotor/mortgage&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It has a couple of simple inputs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amount to borrow&lt;/li&gt;
&lt;li&gt;Interest rate&lt;/li&gt;
&lt;li&gt;Loan duration&lt;/li&gt;
&lt;li&gt;Payment frequency&lt;/li&gt;
&lt;li&gt;How frequently interests are compounded&lt;/li&gt;
&lt;li&gt;Month of the first payment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The option to begin the loan now but accept the first payment much later is there also because of the complicated use case I had in mind. Again, that is a feature a bank will most likely not offer. But it&#39;s something I needed to take into consideration.&lt;/p&gt;

&lt;p&gt;Going back to the app, I tried explaining all the inputs as much as possible. The output is relatively straight forward.&lt;/p&gt;

&lt;p&gt;First, there is a line with focus D3 interactive plot (&lt;span class=&#34;showtooltip&#34; title=&#34;Partners N (2014). &#39;Line Chart With View Finder - NVD3.&#39; .&#34;&gt;&lt;a href=&#34;http://nvd3.org//examples/lineWithFocus.html&#34;&gt;Line Chart with View Finder&lt;/a&gt;&lt;/span&gt;) which shows the principal (the amount you owe) over months as well as how much you&#39;ve paid already. The bottom panel allows you to zoom into a specific time range as shown below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://lcolladotor.github.io/figs/2014-04-22-mortgage-calculator-flexible-payments/lineWithFocus.png&#34;&gt;&lt;img src=&#34;http://lcolladotor.github.io/figs/2014-04-22-mortgage-calculator-flexible-payments/lineWithFocus.png&#34; alt=&#34;Workflow&#34; style=&#34;width: 775px;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Next, the information is shown in more detail as an interactive data table (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;DataTables (table plug-in for jQuery).&#39; .&#34;&gt;&lt;a href=&#34;https://datatables.net/&#34;&gt;DataTables&lt;/a&gt;&lt;/span&gt;) 12 months at a time. The interactive part makes it very easy to search for a specific month and look at the state of the loan.&lt;/p&gt;

&lt;p&gt;Finally, you can download the amortization table in CSV format for your records.&lt;/p&gt;

&lt;p&gt;PS You can also access the app via shinyapps at this &lt;a href=&#34;https://lcolladotor.shinyapps.io/mortgage2/&#34; target=&#34;_blank&#34;&gt;url&lt;/a&gt;. It is the first time I&#39;ve deployed an app there as I wanted to test shinyapps out.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;The experience of coding the &lt;a href=&#34;http://glimmer.rstudio.com/lcolladotor/mortgage/&#34; target=&#34;_blank&#34;&gt;shiny app&lt;/a&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;(2014). &#39;Simple Mortgage Calculator.&#39; .&#34;&gt;&lt;a href=&#34;http://glimmer.rstudio.com/lcolladotor/mortgage/&#34;&gt;Simple Mortage Calculator&lt;/a&gt;&lt;/span&gt;) was interesting as I did learn a couple of new things. The same was true for figuring out the calculations for the more flexible options.&lt;/p&gt;

&lt;p&gt;Finally, but not least, the shiny app was useful for my use case and was informative for comparing different loan options. Hopefully it will be useful for other users!&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Boettiger C (2014). knitcitations: Citations for knitr markdown files. R package version 0.5-0.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34;&gt;Boettiger, 2014&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mortgage loan - Wikipedia, the free encyclopedia.  &lt;em&gt;Wikipedia&lt;/em&gt;  &lt;a href=&#34;http://en.wikipedia.org/wiki/Mortgage_loan&#34; target=&#34;_blank&#34;&gt;http://en.wikipedia.org/wiki/Mortgage_loan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Amortization calculator - Wikipedia, the free encyclopedia.  &lt;em&gt;Wikipedia&lt;/em&gt;  &lt;a href=&#34;http://en.wikipedia.org/wiki/Amortization_calculator&#34; target=&#34;_blank&#34;&gt;http://en.wikipedia.org/wiki/Amortization_calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C,   (2010) Mortgage Calculator (and Amortization Charts) with R.  &lt;em&gt;R-Chart&lt;/em&gt;  &lt;a href=&#34;http://www.r-chart.com/2010/11/mortgage-calculator-and-amortization.html&#34; target=&#34;_blank&#34;&gt;http://www.r-chart.com/2010/11/mortgage-calculator-and-amortization.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BioStatMatt,  Mortgage Refinance Calculator | BioStatMatt.  &lt;em&gt;BioStatMatt&lt;/em&gt;  &lt;a href=&#34;http://biostatmatt.com/archives/1908&#34; target=&#34;_blank&#34;&gt;http://biostatmatt.com/archives/1908&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Compound Interest Calculator.  &lt;a href=&#34;http://www.calculator.net/compound-interest-calculator.html&#34; target=&#34;_blank&#34;&gt;http://www.calculator.net/compound-interest-calculator.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Compound Interest.  &lt;a href=&#34;http://math.about.com/library/weekly/aa042002a.htm&#34; target=&#34;_blank&#34;&gt;http://math.about.com/library/weekly/aa042002a.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simple Mortgage Calculator.  &lt;a href=&#34;http://glimmer.rstudio.com/lcolladotor/mortgage/&#34; target=&#34;_blank&#34;&gt;http://glimmer.rstudio.com/lcolladotor/mortgage/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Novus Partners,  Line Chart With View Finder - NVD3.  &lt;a href=&#34;http://nvd3.org//examples/lineWithFocus.html&#34; target=&#34;_blank&#34;&gt;http://nvd3.org//examples/lineWithFocus.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DataTables (table plug-in for jQuery).  &lt;em&gt;DataTables (jQuery plug-in)&lt;/em&gt;  &lt;a href=&#34;https://datatables.net/&#34; target=&#34;_blank&#34;&gt;https://datatables.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carl Boettiger,   (2014) knitcitations: Citations for knitr markdown files.  &lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=knitcitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ramnath Vaidyanathan,   (2013) rCharts: Interactive Charts using Polycharts.js.&lt;/li&gt;
&lt;li&gt;RStudio , Inc. ,   (2014) shiny: Web Application Framework for R.  &lt;a href=&#34;http://CRAN.R-project.org/package=shiny&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=shiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## R version 3.1.0 (2014-04-10)
## Platform: x86_64-apple-darwin10.8.0 (64-bit)
## 
## locale:
## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] knitcitations_0.5-0 bibtex_0.3-6        knitr_1.5.27       
## 
## loaded via a namespace (and not attached):
##  [1] codetools_0.2-8 digest_0.6.4    evaluate_0.5.3  formatR_0.10   
##  [5] httr_0.3        RCurl_1.95-4.1  stringr_0.6.2   tools_3.1.0    
##  [9] XML_3.98-1.1    xtable_1.7-3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check other &lt;a href=&#34;https://twitter.com/jhubiostat&#34; target=&#34;_blank&#34;&gt;@jhubiostat&lt;/a&gt; student blogs at &lt;a href=&#34;http://bmorebiostat.com/&#34; target=&#34;_blank&#34;&gt;Bmore Biostats&lt;/a&gt; as well as topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>rMaps Mexico map</title>
      <link>http://lcolladotor.github.io/2014/02/26/excited-by-willingness-to-help-get-things-done/</link>
      <pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://lcolladotor.github.io/2014/02/26/excited-by-willingness-to-help-get-things-done/</guid>
      <description>

&lt;h2 id=&#34;it-s-exciting-when-great-people-help-each-other-get-things-done&#34;&gt;It&#39;s exciting when great people help each other get things done&lt;/h2&gt;

&lt;p&gt;This is a simple networking story, which might not be surprising to some but I was happily surprised by it. This is how the story goes:&lt;/p&gt;

&lt;p&gt;Two weeks ago &lt;code&gt;rMaps&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Vaidyanathan R (2014). rMaps: Interactive Maps from R. R package version 0.1.&#34;&gt;&lt;a href=&#34;&#34;&gt;Vaidyanathan, 2014&lt;/a&gt;&lt;/span&gt;) was released. After making a &lt;a href=&#34;http://lcolladotor.github.io/2014/02/10/rMaps-released/#.Uwz64kJdV18&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; about it I thought about using it to make a map of the homicide rate in Mexico over the recent years. First, I had the question of how to make custom maps with &lt;code&gt;rMaps&lt;/code&gt;. &lt;a href=&#34;https://github.com/tyokota&#34; target=&#34;_blank&#34;&gt;@tyokota&lt;/a&gt; had the same question and started asking &lt;a href=&#34;https://github.com/ramnathv&#34; target=&#34;_blank&#34;&gt;Ramnath&lt;/a&gt; about it in &lt;a href=&#34;https://github.com/ramnathv/rMaps/issues/6&#34; target=&#34;_blank&#34;&gt;rMaps issue 6&lt;/a&gt;. Then I realized I needed a specific file with the map information. Google lead me to &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; who has created the map from official Mexican sources, downloaded the homicide data, cleaned it, and made several maps and analyses: all his work is very impressive! I thought that it&#39;d be very cool if &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; and &lt;a href=&#34;https://github.com/ramnathv&#34; target=&#34;_blank&#34;&gt;Ramnath&lt;/a&gt; connected, and they did! I saw them interacting via Twitter (&lt;a href=&#34;https://twitter.com/diegovalle/status/433619946434596864&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/ramnath_vaidya/status/433813747593801728&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;) and via &lt;a href=&#34;https://github.com/ramnathv/rMaps/issues/6&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;. After sharing &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt;&#39;s work with my friends, it turned out that some old friends already knew him (&lt;a href=&#34;https://twitter.com/unRob/status/433675310542749696&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and high school friends). Another friend was interested in additional features and I suggested her to contact &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; via Twitter: he quickly replied as you can see &lt;a href=&#34;https://twitter.com/diegovalle/status/434444498341347328&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Beyond how impressive &lt;code&gt;rMaps&lt;/code&gt; and &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt;&#39;s work on mexican data are, I was amazed by the willingness to help each other and how great people easily connected. I believe this is one of the great features of both GitHub and Twitter where you can share your code, ask questions, try to answer them, meet people working with your tools, etc. You can even offer to PayPal a beer like &lt;a href=&#34;https://github.com/tyokota&#34; target=&#34;_blank&#34;&gt;@tyokota&lt;/a&gt; did.&lt;/p&gt;

&lt;p&gt;After all their great work, now someone like me (aka, without knowing javascript, Datamaps, etc) can walk you through an example of making an interactive choropleth map showing the homicides rates in Mexico from 1997 to 2013.&lt;/p&gt;

&lt;h2 id=&#34;homicides-rates-in-mexico-1997-2013&#34;&gt;Homicides rates in Mexico 1997-2013&lt;/h2&gt;

&lt;p&gt;The first thing we need to make a custom map using &lt;code&gt;rMaps&lt;/code&gt; is a &lt;a href=&#34;http://en.wikipedia.org/wiki/TopoJSON&#34; target=&#34;_blank&#34;&gt;topojson&lt;/a&gt; file which in this case specifies the mexican states boundaries. This process is explained in more detail by &lt;a href=&#34;https://github.com/tyokota&#34; target=&#34;_blank&#34;&gt;@tyokota&lt;/a&gt; at &lt;a href=&#34;https://github.com/tyokota/custom-map&#34; target=&#34;_blank&#34;&gt;custom-map&lt;/a&gt; which you can view &lt;a href=&#34;https://github.com/tyokota/custom-map/blob/master/custom-map.Rmd&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this particular example, &lt;a href=&#34;http://www.inegi.org.mx/&#34; target=&#34;_blank&#34;&gt;INEGI&lt;/a&gt; which is the National Institute of Statistics and Geography of Mexico has a map of the mexican states. &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; explained how to download it &lt;a href=&#34;https://github.com/ramnathv/rMaps/issues/6#issuecomment-34942284&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But before doing so, you might to install &lt;code&gt;topojson&lt;/code&gt; like I did below following the &lt;a href=&#34;https://github.com/mbostock/topojson/wiki/Installation&#34; target=&#34;_blank&#34;&gt;installation instructions&lt;/a&gt;. In the terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
## Install node.js following instructions at https://github.com/mbostock/topojson/wiki/Installation
brew install node
## Install topojson
npm install -g topojson

## Download map info from INEGI (Mexican official source)
curl -o estados.zip http://mapserver.inegi.org.mx/MGN/mge2010v5_0.zip
## Decompress file
unzip estados.zip
## Create shapefile
ogr2ogr states.shp Entidades_2010_5.shp -t_srs &amp;quot;+proj=longlat +ellps=WGS84 +no_defs +towgs84=0,0,0&amp;quot;
## id-property needed so that DataMaps knows how to color the map
topojson -o mx_states.json -s 1e-7 -q 1e5 states.shp -p state_code=+CVE_ENT,name=NOM_ENT --id-property NOM_ENT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have the &lt;a href=&#34;http://en.wikipedia.org/wiki/TopoJSON&#34; target=&#34;_blank&#34;&gt;topojson&lt;/a&gt; file &lt;strong&gt;mx_states.json&lt;/strong&gt; we need to get the actual homicide data. &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; has gone through the whole process of acquiring the data from official mexican sources and cleaning it. Lets download it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Download crime data
## From crimenmexico.diegovalle.net/en/csv
## All local crimes at the state level
download.file(&amp;quot;http://crimenmexico.diegovalle.net/en/csv/fuero-comun-estados.csv.gz&amp;quot;, 
	&amp;quot;fuero-comun-estados.csv.gz&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The data is not completely ready for us to use it and we need to reshape it a bit. In particular, we want to consider only the intentional homicides and group the data by state and date. We can get this to work by using &lt;code&gt;dplyr&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Wickham H and Francois R (2014). dplyr: dplyr: a grammar of data manipulation. R package version 0.1.1.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=dplyr&#34;&gt;Wickham &amp;amp; Francois, 2014&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Load required packages
library(&amp;quot;dplyr&amp;quot;)

## Load the crime data
crime &amp;lt;- read.csv(&amp;quot;fuero-comun-estados.csv.gz&amp;quot;)

## Only intentional homicides
crime &amp;lt;- subset(crime, crime == &amp;quot;HOMICIDIOS&amp;quot; &amp;amp; type == &amp;quot;DOLOSOS&amp;quot;)

## Sum homicides by firearm, etc and group by state and date
hom &amp;lt;- crime %.%
  filter(year %in% 1997:2013) %.%
  group_by(state_code, year, type) %.%
  summarise(total = sum(count, na.rm = TRUE),
            population = mean(population) ) %.%
  mutate(rate = total / population * 10^5) %.%
  arrange(state_code, year)

## How are states coded?
summary(hom$state_code)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##    1.00    8.75   16.50   16.50   24.20   32.00
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have the slight inconvenience that states are coded as integers from 1 to 32 instead of using their names. Using another of the files supplied by &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; we can merge the codes. This requires using the &lt;code&gt;foreign&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;R Core Team (2014). foreign: Read Data Stored by Minitab, S, SAS, SPSS, Stata, Systat, Weka, dBase.... R package version 0.8-59.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=foreign&#34;&gt;R Core Team&lt;/a&gt;&lt;/span&gt;) package for loading a &lt;em&gt;dbf&lt;/em&gt; file and then merging both data sets with &lt;code&gt;plyr&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Wickham H (2011). &#39;The Split-Apply-Combine Strategy for Data Analysis.&#39; Journal of Statistical Software, 40(1), pp. 1-29. .&#34;&gt;&lt;a href=&#34;http://www.jstatsoft.org/v40/i01/&#34;&gt;Wickham, 2011&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Needed for read.dbf
library(&amp;quot;foreign&amp;quot;)

## The dbf from the state shapefile needed to merge state_code with state
## names
codes &amp;lt;- read.dbf(&amp;quot;states.dbf&amp;quot;)
codes$NOM_ENT &amp;lt;- iconv(codes$NOM_ENT, &amp;quot;windows-1252&amp;quot;, &amp;quot;utf-8&amp;quot;)
codes$CVE_ENT &amp;lt;- as.numeric(codes$CVE_ENT)
codes$OID &amp;lt;- NULL
names(codes) &amp;lt;- c(&amp;quot;state_code&amp;quot;, &amp;quot;name&amp;quot;)

## Load plyr for join(). Loading it before creates a problem with the dplyr
## call above
library(&amp;quot;plyr&amp;quot;)

## Names needed for the map
hom &amp;lt;- join(hom, codes)

## Lets look at the data
head(hom)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   state_code year    type total population   rate           name
## 1          1 1997 DOLOSOS   355     958126 37.051 Aguascalientes
## 2          1 1998 DOLOSOS    66     975585  6.765 Aguascalientes
## 3          1 1999 DOLOSOS    27     992515  2.720 Aguascalientes
## 4          1 2000 DOLOSOS    14    1009215  1.387 Aguascalientes
## 5          1 2001 DOLOSOS    22    1026437  2.143 Aguascalientes
## 6          1 2002 DOLOSOS    26    1044578  2.489 Aguascalientes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great! We now have state names under &lt;em&gt;name&lt;/em&gt; and the intentional homicide rate under &lt;em&gt;rate&lt;/em&gt; (in homicides per 100,000) for each specific &lt;em&gt;year&lt;/em&gt;. We can thus proceed to making the interactive choropleth map using the &lt;code&gt;ichoropleth&lt;/code&gt; function described by &lt;a href=&#34;https://github.com/ramnathv&#34; target=&#34;_blank&#34;&gt;Ramnath&lt;/a&gt; &lt;a href=&#34;http://rmaps.github.io/blog/posts/animated-choropleths/index.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. This requires specifying the &lt;a href=&#34;http://en.wikipedia.org/wiki/TopoJSON&#34; target=&#34;_blank&#34;&gt;topojson&lt;/a&gt; file which is specified via &lt;em&gt;dataUrl&lt;/em&gt;, the name of the map specified via &lt;em&gt;scope&lt;/em&gt; and the most tricky part (for me at least) is that we need to specify the &lt;em&gt;setProjection&lt;/em&gt;. These are all properties of the &lt;a href=&#34;https://github.com/markmarkoh/datamaps&#34; target=&#34;_blank&#34;&gt;Datamaps&lt;/a&gt; library. In particular, the wiki describes &lt;a href=&#34;https://github.com/markmarkoh/datamaps/blob/master/README.md#using-custom-maps&#34; target=&#34;_blank&#34;&gt;how to use custom maps&lt;/a&gt; but this requires some javascript knowledge.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Make the map
library(&amp;quot;rMaps&amp;quot;)
d1 &amp;lt;- ichoropleth(rate ~ name, data = hom, ncuts = 9, pal = &#39;YlOrRd&#39;, 
    animate = &#39;year&#39;,  map = &#39;states&#39;
)
## Note that I am hosting the mx_states.json in Dropbox
## but if you are doing it locally, you only need
## dataUrl = &amp;quot;mx_states.json&amp;quot;
d1$set(
  geographyConfig = list(
   dataUrl = &amp;quot;https://dl.dropboxusercontent.com/u/10794332/mx_states.json&amp;quot;
  ),
 scope = &#39;states&#39;,
 setProjection = &#39;#! function( element, options ) {
   var projection, path;
   projection = d3.geo.mercator()
    .center([-89, 21]).scale(element.offsetWidth)
    .translate([element.offsetWidth / 2, element.offsetHeight / 2]);

   path = d3.geo.path().projection( projection );
   return {path: path, projection: projection};
  } !#&#39;
)
d1$save(&#39;rMaps.html&#39;, cdn = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The end result is shown below:&lt;/p&gt;

&lt;iframe src=&#39;
http://lcolladotor.github.io/figs/2014-02-26-excited-by-willingness-to-help-get-things-done/rMaps.html
&#39; scrolling=&#39;no&#39; seamless
class=&#39;rChart datamaps &#39;
id=iframe-
chart1859838d5e973
width=100%
height=500px
 &gt;&lt;/iframe&gt;

&lt;p&gt;You can also share the map using the &lt;em&gt;publish&lt;/em&gt; method as shown below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1$publish(&amp;quot;Intentional homicides rates for Mexico 1997-2013&amp;quot;)
## You&#39;ll need a GitHub account
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will get a link to the rCharts viewer such as &lt;a href=&#34;http://rcharts.io/viewer/?9223554#.Uw1tNEJdV18&#34; target=&#34;_blank&#34;&gt;this one&lt;/a&gt; or if you prefer, you can also view the result using Pagist as shown &lt;a href=&#34;http://www.pagist.info/9223554&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The code presented in this post was written by &lt;a href=&#34;https://github.com/diegovalle&#34; target=&#34;_blank&#34;&gt;@diegovalle&lt;/a&gt; which can you view &lt;a href=&#34;http://bl.ocks.org/diegovalle/8967565&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/ramnathv&#34; target=&#34;_blank&#34;&gt;Ramnath&lt;/a&gt; which is shown &lt;a href=&#34;https://github.com/ramnathv/rMaps/issues/6#issuecomment-34946041&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. I also figured out the trick of hosting the &lt;a href=&#34;http://en.wikipedia.org/wiki/TopoJSON&#34; target=&#34;_blank&#34;&gt;topojson&lt;/a&gt; file at Dropbox from &lt;a href=&#34;https://github.com/tyokota&#34; target=&#34;_blank&#34;&gt;@tyokota&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/tyokota/custom-map/blob/master/custom-map.Rmd&#34; target=&#34;_blank&#34;&gt;code&lt;/a&gt; as I was running into &lt;em&gt;Access-Control-Allow-Origin&lt;/em&gt; errors when hosting it in my academic website. Finally, but not least, &lt;a href=&#34;https://github.com/ramnathv&#34; target=&#34;_blank&#34;&gt;Ramnath&lt;/a&gt; appropriately insists that all of this would not be possible without libraries such as &lt;a href=&#34;https://github.com/markmarkoh/datamaps&#34; target=&#34;_blank&#34;&gt;Datamaps&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Boettiger C (2014). knitcitations: Citations for knitr markdown files. R package version 0.5-0.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34;&gt;Boettiger, 2014&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hadley Wickham, Romain Francois,   (2014) dplyr: dplyr: a grammar of data manipulation.  &lt;a href=&#34;http://CRAN.R-project.org/package=dplyr&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=dplyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;R Core Team ,   (2014) foreign: Read Data Stored by Minitab, S, SAS, SPSS, Stata, Systat, Weka,
dBase, ....  &lt;a href=&#34;http://CRAN.R-project.org/package=foreign&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=foreign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carl Boettiger,   (2014) knitcitations: Citations for knitr markdown files.  &lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=knitcitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hadley Wickham,   (2011) The Split-Apply-Combine Strategy for Data Analysis.  &lt;em&gt;Journal of Statistical Software&lt;/em&gt;  &lt;strong&gt;40&lt;/strong&gt;  (1)   1-29  &lt;a href=&#34;http://www.jstatsoft.org/v40/i01/&#34; target=&#34;_blank&#34;&gt;http://www.jstatsoft.org/v40/i01/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ramnath Vaidyanathan,   (2014) rMaps: Interactive Maps from R.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## R version 3.0.2 (2013-09-25)
## Platform: x86_64-apple-darwin10.8.0 (64-bit)
## 
## locale:
## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] rMaps_0.1.1         plyr_1.8            foreign_0.8-59     
## [4] dplyr_0.1.1         knitcitations_0.5-0 bibtex_0.3-6       
## [7] knitr_1.5          
## 
## loaded via a namespace (and not attached):
##  [1] assertthat_0.1     digest_0.6.4       evaluate_0.5.1    
##  [4] formatR_0.10       grid_3.0.2         httr_0.2          
##  [7] lattice_0.20-24    rCharts_0.4.2      RColorBrewer_1.0-5
## [10] Rcpp_0.11.0        RCurl_1.95-4.1     RJSONIO_1.0-3     
## [13] stringr_0.6.2      tools_3.0.2        whisker_0.3-2     
## [16] XML_3.95-0.2       xtable_1.7-1       yaml_2.1.10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check other topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
