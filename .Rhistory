devtools::install_github('jbryer/Rgitbook')
knit2html()
library(rmarkdown) ; knit2html()
packageDescription::rmarkdown
packageDescription("rmarkdown")
?rmarkdown
render("2014-12-28-test-post-3.Rmd", pdf_document())
pwd
getwd()
setwd("~/git/ttmmghmm.github.com/_posts")
render("2014-12-28-test-post-3.Rmd", pdf_document())
render("2014-12-28-test-post-3.Rmd", pdf_document())
render("2014-12-28-test-post-3.Rmd", pdf_document())
render("2014-12-28-test-post-3.Rmd", pdf_document())
render("2014-12-28-test-post-3.Rmd", pdf_document())
knit("2014-12-28-test-post-3.Rmd") #
library(knitr)
knit("2014-12-28-test-post-3.Rmd")
rmarkdown::render(fn)
fn <- ""2014-12-28-test-post-3.Rmd"
fn <- "2014-12-28-test-post-3.Rmd"
rmarkdown::render(fn)
library('devtools')
install_github('lcolladotor/dots')
library('knitcitations')
install.packages("knitrBootstrap")
writeLines(c("# hello markdown", '&ldquo;`{r hello-random, echo=TRUE}', 'rnorm(5)', '&ldquo;`'), 'test.Rmd')
knit_bootstrap('test.Rmd', boot_style='Amelia', code_style='Dark', chooser=c('boot','code'))
library(knitBootstrap)
library(knitrBootstrap)
knit_bootstrap('test.Rmd', boot_style='Amelia', code_style='Dark', chooser=c('boot','code'))
if(interactive()) browseURL('test.html')
getwd()
files.remove
file.remove
?file.remove
file.remove(c("test.Rmd", "test.md", "test.html"))
writeLines(c("# hello markdown", '&ldquo;`{r hello-random, echo=TRUE}', 'rnorm(5)', '&ldquo;`'), 'test.Rmd')
library(knitrBootstrap)
knit_bootstrap('test.Rmd', boot_style='Amelia', code_style='Dark',
chooser=c('boot','code'))
library('knitrBootstrap')
library('knitrBootstrap')
knitrBootstrapFlag
knitrBootstrapFlag <- packageVersion('knitrBootstrap') < '1.0.0'
knitrBootstrapFlag
library('knitrBootstrap')
system.time(knit_bootstrap('2014-12-29-dotsPkgCopy-2.Rmd', chooser=c('boot', 'code'), show_code = TRUE))
unlink('dotsRef.bib')
install.packages("jsonlite")
library(jsonlite)
library(microbenchmark)
data(diamonds, package="ggplot2")
json_rows <- toJSON(diamonds)
json_columns <- toJSON(diamonds, dataframe = "columns")
microbenchmark(
toJSON(diamonds),
toJSON(diamonds, dataframe = "columns"),
fromJSON(json_rows),
fromJSON(json_columns),
times=10
)
str(diamonds)
gc()
ls()
ls.objects()
http://gastonsanchez.com/blog/
library(DiagrammeR)
library(htmltools)
library(pipeR)
install.packages("pipeR")
library(devtools)
install_devtools
devtools_install
install_github("HermanHiddema/diagrammer")
require(devtools)
install_github('DiagrammeR', 'rich-iannone')
require(devtools)
install_github('DiagrammeR', )
require(devtools)
install_github('rich-iannone/DiagrammeR')
library(htmlwidgets)
install.packages("htmlwidgets")
require(devtools)
install_github('rich-iannone/DiagrammeR')
install.packages("plotly")
install.packages("devtools")  # so we can install from GitHub
install.packages("devtools")
devtools::install_github("ropensci/plotly")  # plotly is part of rOpenSci
library(plotly)
py <- plotly(username="r_user_guide", key="mw5isa4yqp")  # open plotly connection
gg <- ggplot(cars) + geom_point(aes(speed, dist))
py$ggplotly(gg)
library('devtools')
use_travis('ttmmghmm.github.com')
getwd()
setwd("/home/rstudio/git/")
library('devtools')
use_travis('ttmmghmm.github.com')
py <- plotly(username="r_user_guide", key="mw5isa4yqp")  # open plotly connection
gg <- ggplot(cars) + geom_point(aes(speed, dist))
py <- plotly()
title: "blah blah"
title: "blah blah"
install.packages(c("bibtex", "digest", "httr", "manipulate", "rstudioapi"))
install.packages(c("bibtex", "digest", "httr", "manipulate",
"rstudioapi"))
install.packages(c("bibtex", "digest", "httr", "manipulate",
"rstudioapi"))
install.packages(c("bibtex", "digest", "httr", "manipulate",
"rstudioapi"))
library('knitrBootstrap')
knitrBootstrapFlag <- packageVersion('knitrBootstrap') < '1.0.0'
if(knitrBootstrapFlag) {
## CRAN version
library('knitrBootstrap')
system.time(knit_bootstrap('dots.Rmd', chooser=c('boot', 'code'), show_code = TRUE))
unlink('dots.md')
} else {
## GitHub version
library('rmarkdown')
system.time(render('dots.Rmd'))
}
unlink('dotsRef.bib')
## Note: if you prefer the knitr version use:
# library('rmarkdown')
# system.time(render('dots.Rmd', 'html_document'))
## Extract the R code
library('knitr')
knit('dots.Rmd', tangle = TRUE)
library(dots)
library('knitrBootstrap')
knitrBootstrapFlag <- packageVersion('knitrBootstrap') < '1.0.0'
if(knitrBootstrapFlag) {
## CRAN version
library('knitrBootstrap')
system.time(knit_bootstrap('dots.Rmd', chooser=c('boot', 'code'), show_code = TRUE))
unlink('dots.md')
} else {
## GitHub version
library('rmarkdown')
system.time(render('dots.Rmd'))
}
unlink('dotsRef.bib')
## Note: if you prefer the knitr version use:
# library('rmarkdown')
# system.time(render('dots.Rmd', 'html_document'))
## Extract the R code
library('knitr')
knit('dots.Rmd', tangle = TRUE)
