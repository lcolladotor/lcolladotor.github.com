<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knitr on L. Collado-Torres</title>
    <link>http://lcolladotor.github.io/tags/knitr/</link>
    <description>Recent content in Knitr on L. Collado-Torres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2011-2018 Leonardo Collado Torres under (CC) BY-NC-SA 4.0</copyright>
    <lastBuildDate>Tue, 10 Dec 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://lcolladotor.github.io/tags/knitr/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Creating awesome reports for multiple audiences using knitrBootstrap</title>
      <link>http://lcolladotor.github.io/2013/12/10/knitrBootstrap/</link>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/10/knitrBootstrap/</guid>
      <description>

&lt;p&gt;As a biostatistics student, I use &lt;code&gt;R&lt;/code&gt; very frequently when analyzing data. At the same time, I interact with other researchers, some who know how to use &lt;code&gt;R&lt;/code&gt; (R crowd) and some who don&#39;t (yet!): no-R crowd. This means that I have to be able to communicate my results to two crowds. It is important that I can quickly provide the code in case that the &lt;code&gt;R&lt;/code&gt; savvy want to look at it: maybe they find a bug and report it ^^. Ideally I want to avoid having to write (organize, share, etc) two crowd-specific reports.&lt;/p&gt;

&lt;p&gt;A solution to this problem is to create reproducible reports that contain the R code, the results, and interpretation. For the specific scenario I am talking about, reproducibility is a plus, however I believe that it is important for research; albeit not the topic of this post. One of the strongest packages out there to create such reports is &lt;code&gt;knitr&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Xie Y (2013). Dynamic Documents with R and knitr. Chapman and Hall/CRC. ISBN 978-1482203530.&#34;&gt;&lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;Xie, 2013&lt;/a&gt;&lt;/span&gt;). It is specially easy to create &lt;code&gt;Rmd&lt;/code&gt; files from which you can generate HTML reports. Then using &lt;a href=&#34;http://www.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt; you can share them via &lt;a href=&#34;http://rpubs.com/&#34; target=&#34;_blank&#34;&gt;RPubs&lt;/a&gt;, a private folder on Dropbox, etc. From example, &lt;a href=&#34;http://rpubs.com/lcollado/2618&#34; target=&#34;_blank&#34;&gt;this is a presentation&lt;/a&gt; without the slide formatting I shared more than a year ago.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;knitr&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Xie Y (2013). Dynamic Documents with R and knitr. Chapman and Hall/CRC. ISBN 978-1482203530.&#34;&gt;&lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;Xie, 2013&lt;/a&gt;&lt;/span&gt;) is definitely a step in the right direction. However, you soon find yourself desiring a better template. This is where &lt;code&gt;knitrBootstrap&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Hester J (2013). knitrBootstrap: Knitr Bootstrap framework.. R package version 0.9.0.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=knitrBootstrap&#34;&gt;Hester, 2013&lt;/a&gt;&lt;/span&gt;) comes in. This package was initialized in March 20th, 2013 by &lt;a href=&#34;http://jimhester.com/&#34; target=&#34;_blank&#34;&gt;Jim Hester&lt;/a&gt; and hosted on it&#39;s &lt;a href=&#34;https://github.com/jimhester/knitrBootstrap&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;. I was sold on the idea early on and I am now making this post in part as a tribute to celebrate that it has been available via &lt;a href=&#34;http://cran.at.r-project.org/web/packages/knitrBootstrap/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; for nearly 5 months now.&lt;/p&gt;

&lt;p&gt;So what can you do with &lt;code&gt;knitrBootstrap&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Hester J (2013). knitrBootstrap: Knitr Bootstrap framework.. R package version 0.9.0.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=knitrBootstrap&#34;&gt;Hester, 2013&lt;/a&gt;&lt;/span&gt;)? In my opinion, you get the ideal solution (or very close at the least) to the problem I described at the beginning. Basically, you get a HTML report that has the interpretation and results which is what the no-R crowd wants to read, and the R code easily available at the click of a button for the R crowd. In addition, the report is much more nicely formatted which is pleasant to the eye. Furthermore, a menu with the sections is included which is very useful when navigating the report and for jumping to specific sections. To save space, the plots are saved as thumbnails and you can click on them to get the full view. Finally, you can choose to display toggle menus for allowing the users to change the default text and code formatting.&lt;/p&gt;

&lt;p&gt;How do you use this package? The main workhorse is the &lt;code&gt;knit_boostrap()&lt;/code&gt; function. The initial arguments are similar to those you find in &lt;code&gt;knitr::knit()&lt;/code&gt; while the new features are controlled using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boot_style&lt;/code&gt; You can select out of 11 or so options for the default formatting. Basically, you choose one of the Bootstrap themes available.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;code_style&lt;/code&gt; Similar to &lt;code&gt;boot_style&lt;/code&gt; but for controlling the appearance of the code chunks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chooser&lt;/code&gt; Allows you to control if you want a toggle menu so the user can choose (hence the name) the bootstrap and/or code styles.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thumbsize&lt;/code&gt; For controlling the size of figure thumbnails.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_code&lt;/code&gt; Whether by default the code is shown. I set this to &lt;code&gt;FALSE&lt;/code&gt; in order to get a report that by default is accessible for the no-R crowd. The R crowd can then click to see the code for each code chunk or use the menu on the bottom to show all the code at once.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_output&lt;/code&gt; Similar to &lt;code&gt;show_code&lt;/code&gt; but for controlling the visibility of the output produced from the code. I set this to &lt;code&gt;TRUE&lt;/code&gt; as you normally want to show the output to both the no-R and R crowds.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_figure&lt;/code&gt; Whether you want to show the plots or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;graphics&lt;/code&gt; Used only for controlling the toggle menus for the bootstrap and code styles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have decided which options you want to use, it is as simple as running the following code for your &lt;code&gt;Rmd&lt;/code&gt; file (named &lt;code&gt;file.Rmd&lt;/code&gt; in the example):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Install if needed
install.packages(&amp;quot;knitrBootstrap&amp;quot;)

## knit with knitrBootstrap
library(&amp;quot;knitrBootstrap&amp;quot;)
knit_bootstrap(&amp;quot;file.Rmd&amp;quot;, code_style = &amp;quot;Brown Paper&amp;quot;, chooser = c(&amp;quot;boot&amp;quot;, &amp;quot;code&amp;quot;), 
    show_code = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Things get a tiny bit more complicated if you want to use &lt;a href=&#34;http://www.rstudio.com/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt;. You basically have to modify your &lt;code&gt;.Rprofile&lt;/code&gt; file, then load RStudio and change the settings to weave files with &lt;code&gt;knitr&lt;/code&gt;instead of using &lt;code&gt;Sweave&lt;/code&gt;. Then, you have to use &lt;code&gt;knitr::render_html()&lt;/code&gt; on the &lt;code&gt;Rmd&lt;/code&gt; file itself. Below is a short example of the &lt;code&gt;.Rprofile&lt;/code&gt; modified to use &lt;code&gt;knitrBootstrap&lt;/code&gt; and the basic &lt;code&gt;Rmd&lt;/code&gt; example.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/lcolladotor/6445771.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;You can view the final output &lt;a href=&#34;http://rpubs.com/lcollado/11210&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Note that you might need to click on &amp;quot;hide toolbars&amp;quot; (a RPubs option) to clearly view the menus on the bottom.&lt;/p&gt;

&lt;p&gt;If you are like me and use &lt;a href=&#34;https://github.com/textmate/textmate&#34; target=&#34;_blank&#34;&gt;Textmate&lt;/a&gt; as your text editor, you can knit the &lt;code&gt;Rmd&lt;/code&gt; files with &lt;code&gt;knitrBootstrap&lt;/code&gt; and preview them directly on the Textmate viewr using a command like this (modified from the SWeave bundle):&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/lcolladotor/7884334.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Other usage options are described in the &lt;a href=&#34;http://jimhester.github.io/knitrBootstrap&#34; target=&#34;_blank&#34;&gt;knitrBootstrap help page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To close off, let me emphasize how useful it is to be able to generate a single report that is pleasant to the eye, contains all the information, and is easily sharable for both the R and no-R crowds. Plus it&#39;s reproducible!&lt;/p&gt;

&lt;p&gt;I really like this package and would like to thank &lt;a href=&#34;http://jimhester.com/&#34; target=&#34;_blank&#34;&gt;Jim Hester&lt;/a&gt; for this great package! Keep up the good work! I even use &lt;code&gt;knitrBootstrap&lt;/code&gt; in &lt;a href=&#34;https://github.com/lcolladotor/derfinderReport&#34; target=&#34;_blank&#34;&gt;derfinderReport&lt;/a&gt; which generates reports on the results from &lt;a href=&#34;https://github.com/lcolladotor/derfinder&#34; target=&#34;_blank&#34;&gt;derfinder&lt;/a&gt;, a package that I am currently developing.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Boettiger C (2013). knitcitations: Citations for knitr markdown files. R package version 0.4-7.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34;&gt;Boettiger, 2013&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Carl Boettiger,   (2013) knitcitations: Citations for knitr markdown files.  &lt;a href=&#34;http://CRAN.R-project.org/package=knitcitations&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=knitcitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yihui Xie,   (2013) Dynamic Documents with {R} and knitr.  &lt;a href=&#34;http://yihui.name/knitr/&#34; target=&#34;_blank&#34;&gt;http://yihui.name/knitr/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jim Hester,   (2013) knitrBootstrap: Knitr Bootstrap framework..  &lt;a href=&#34;http://CRAN.R-project.org/package=knitrBootstrap&#34; target=&#34;_blank&#34;&gt;http://CRAN.R-project.org/package=knitrBootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## R version 3.0.2 (2013-09-25)
## Platform: x86_64-apple-darwin10.8.0 (64-bit)
## 
## locale:
## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] knitrBootstrap_0.9.0 knitcitations_0.4-7  bibtex_0.3-6        
## [4] knitr_1.5           
## 
## loaded via a namespace (and not attached):
##  [1] codetools_0.2-8 digest_0.6.4    evaluate_0.5.1  formatR_0.10   
##  [5] httr_0.2        markdown_0.6.3  RCurl_1.95-4.1  stringr_0.6.2  
##  [9] tools_3.0.2     XML_3.95-0.2    xtable_1.7-1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check other topics on &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34; target=&#34;_blank&#34;&gt;#rstats&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using plyr and doMC for quick and easy apply-family functions</title>
      <link>http://lcolladotor.github.io/2013/04/26/using-plyr-and-domc-for-quick-and-easy-apply-family/</link>
      <pubDate>Fri, 26 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/26/using-plyr-and-domc-for-quick-and-easy-apply-family/</guid>
      <description>&lt;p&gt;A few weeks back I dedicated a short amount of time to actually read what &lt;code&gt;plyr&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Wickham H (2011). The Split-Apply-Combine Strategy for Data
Analysis. _Journal of Statistical Software_, *40*(1), pp. 1-29.
 http://www.jstatsoft.org/v40/i01/.&#34;&gt;&lt;a href=&#34;http://www.jstatsoft.org/v40/i01/&#34;&gt;Wickham, 2011&lt;/a&gt;&lt;/span&gt;) is about and I was surprised. The whole idea behind &lt;code&gt;plyr&lt;/code&gt; is very simple: expand the &lt;code&gt;apply()&lt;/code&gt; family to do things easy. &lt;code&gt;plyr&lt;/code&gt; has many functions whose name ends with &lt;code&gt;ply&lt;/code&gt; which is short of apply. Then, the functions are identified by two letters before &lt;code&gt;ply&lt;/code&gt; which are abbreviations for the input (first letter) and output (second one). For instance, &lt;code&gt;ddply&lt;/code&gt; takes an input a &lt;code&gt;data.frame&lt;/code&gt; and returns a &lt;code&gt;data.frame&lt;/code&gt; while &lt;code&gt;ldply&lt;/code&gt; takes as input a &lt;code&gt;list&lt;/code&gt; and returns a &lt;code&gt;data.frame&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The syntax is pretty straight forward. For example, here are the arguments for &lt;code&gt;ddply&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(plyr)
args(ddply)
## function (.data, .variables, .fun = NULL, ..., .progress = &amp;quot;none&amp;quot;, 
##     .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) 
## NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What we basically have to specify are&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;.data&lt;/code&gt; which in general is the name of the input &lt;code&gt;data.frame&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.variables&lt;/code&gt; which is a vector (note the use of the &lt;code&gt;.&lt;/code&gt; function) of variable names. In this case, &lt;code&gt;ddply&lt;/code&gt; is very useful for applying some function to subsets of the data as specified by these variables,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.fun&lt;/code&gt; which is the actual function we want to run,&lt;/li&gt;
&lt;li&gt;and &lt;code&gt;...&lt;/code&gt; which are parameter options for the function we are running.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;From the &lt;code&gt;ddply&lt;/code&gt; help page we have the following examples:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dfx &amp;lt;- data.frame(
  group = c(rep(&#39;A&#39;, 8), rep(&#39;B&#39;, 15), rep(&#39;C&#39;, 6)),
  sex = sample(c(&amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;), size = 29, replace = TRUE),
  age = runif(n = 29, min = 18, max = 54)
)

# Note the use of the &#39;.&#39; function to allow
# group and sex to be used without quoting
ddply(dfx, .(group, sex), summarize,
 mean = round(mean(age), 2),
 sd = round(sd(age), 2))
##   group sex  mean    sd
## 1     A   F 40.48 12.72
## 2     A   M 34.48 15.28
## 3     B   F 36.05  9.98
## 4     B   M 38.35  7.97
## 5     C   F 20.04  1.86
## 6     C   M 43.81 10.72

# An example using a formula for .variables
ddply(baseball[1:100, ], ~year, nrow)

##   year V1
## 1 1871  7
## 2 1872 13
## 3 1873 13
## 4 1874 15
## 5 1875 17
## 6 1876 15
## 7 1877 17
## 8 1878  3

# Applying two functions; nrow and ncol
ddply(baseball, .(lg), c(&amp;quot;nrow&amp;quot;, &amp;quot;ncol&amp;quot;))

##   lg  nrow ncol
## 1       65   22
## 2 AA   171   22
## 3 AL 10007   22
## 4 FL    37   22
## 5 NL 11378   22
## 6 PL    32   22
## 7 UA     9   22
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this is not the end of the story! Something I really liked about &lt;code&gt;plyr&lt;/code&gt; is that it can be parallelized via the &lt;code&gt;foreach&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Analytics R (2012). _foreach: Foreach looping construct for R_. R
package version 1.4.0, 
http://CRAN.R-project.org/package=foreach.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=foreach&#34;&gt;Analytics, 2012&lt;/a&gt;&lt;/span&gt;) package. I don&amp;#8217;t know much about &lt;code&gt;foreach&lt;/code&gt;, but all I learnt is that you have to use other packages such as &lt;code&gt;doMC&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Analytics R (2013). _doMC: Foreach parallel adaptor for the
multicore package_. R package version 1.3.0, 
http://CRAN.R-project.org/package=doMC.&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=doMC&#34;&gt;Analytics, 2013&lt;/a&gt;&lt;/span&gt;) to actually run the code. It&amp;#8217;s like &lt;code&gt;foreach&lt;/code&gt; specifies the infraestructure to communicate in parallel (and split jobs) and packages like &lt;code&gt;doMC&lt;/code&gt; tailor it for specific environments like for running in multi-core.&lt;/p&gt;
&lt;p&gt;Running things in parallel can then be very easy. Basically, you load the packages, specify the number of cores, and run your &lt;code&gt;ply&lt;/code&gt; function. Here is a short example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Load packages
library(plyr)
library(doMC)

## Loading required package: foreach
## Loading required package: iterators
## Loading required package: parallel

## Specify the number of cores
registerDoMC(4)

## Check how many cores we are using
getDoParWorkers()
## [1] 4

## Run your ply function
ddply(dfx, .(group, sex), summarize, mean = round(mean(age), 2), sd = round(sd(age), 
    2), .parallel = TRUE)

##   group sex  mean    sd
## 1     A   F 40.48 12.72
## 2     A   M 34.48 15.28
## 3     B   F 36.05  9.98
## 4     B   M 38.35  7.97
## 5     C   F 20.04  1.86
## 6     C   M 43.81 10.72
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In case that you are interested, here is a short shell script for knitting an Rmd file in the cluster and specifying the appropriate number of cores to then use &lt;code&gt;plyr&lt;/code&gt; and &lt;code&gt;doMC&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash 
# To run it in the current working directory
#$ -cwd 
# To get an email after the job is done
#$ -m e 
# To speficy that we want 4 cores
#$ -pe local 4
# The name of the job
#$ -N myPlyJob

echo &amp;quot;**** Job starts ****&amp;quot;
date

# Knit your file: assuming it&#39;s called FileToKnit.Rmd
Rscript -e &amp;quot;library(knitr); knit2html(&#39;FileToKnit.Rmd&#39;)&amp;quot;

echo &amp;quot;**** Job ends ****&amp;quot;
date
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets say that the bash script is named &lt;code&gt;script.sh&lt;/code&gt;. Then you can submit it to the cluster queue using&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
qsub script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p&gt;This is what I used to re-format a large &lt;code&gt;data.frame&lt;/code&gt; in a few minutes in the cluster for the &lt;a href=&#34;https://twitter.com/search?q=%23jhsph753&amp;amp;src=typd&#34;&gt;#jhsph753&lt;/a&gt; class homework project.&lt;/p&gt;
&lt;p&gt;So, thank you again &lt;a href=&#34;https://twitter.com/hadleywickham&#34;&gt;Hadley Wickham&lt;/a&gt; for making awesome R packages!&lt;/p&gt;
&lt;p&gt;Citations made with &lt;code&gt;knitcitations&lt;/code&gt; (&lt;span class=&#34;showtooltip&#34; title=&#34;Boettiger C (2013). _knitcitations: Citations for knitr markdown
files_. R package version 0.4-4, 
https://github.com/cboettig/knitcitations.&#34;&gt;&lt;a href=&#34;https://github.com/cboettig/knitcitations&#34;&gt;Boettiger, 2013&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Revolution Analytics, (2013) doMC: Foreach parallel adaptor for the multicore package. &lt;a href=&#34;http://CRAN.R-project.org/package=doMC&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=doMC&#34;&gt;http://CRAN.R-project.org/package=doMC&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revolution Analytics, (2012) foreach: Foreach looping construct for R. &lt;a href=&#34;http://CRAN.R-project.org/package=foreach&#34;&gt;&lt;a href=&#34;http://CRAN.R-project.org/package=foreach&#34;&gt;http://CRAN.R-project.org/package=foreach&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carl Boettiger, knitcitations: Citations for knitr markdown files. &lt;a href=&#34;https://github.com/cboettig/knitcitations&#34;&gt;&lt;a href=&#34;https://github.com/cboettig/knitcitations&#34;&gt;https://github.com/cboettig/knitcitations&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hadley Wickham, (2011) The Split-Apply-Combine Strategy for Data Analysis. &lt;em&gt;Journal of Statistical Software&lt;/em&gt; &lt;strong&gt;40&lt;/strong&gt; (1) &lt;a href=&#34;http://www.jstatsoft.org/v40/i01/&#34;&gt;&lt;a href=&#34;http://www.jstatsoft.org/v40/i01/&#34;&gt;http://www.jstatsoft.org/v40/i01/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding youtube videos in pdfs, html reports and html presentations</title>
      <link>http://lcolladotor.github.io/2012/12/05/adding-youtube-videos-in-pdfs-html-reports/</link>
      <pubDate>Wed, 05 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/12/05/adding-youtube-videos-in-pdfs-html-reports/</guid>
      <description>&lt;p&gt;I got a question today on how to add a video to a beamer pdf presentation. Well, I had never done it, but I got curious enough to google around for a bit and here is the end product.&lt;/p&gt;
&lt;p&gt;One way of doing it is using the &lt;a href=&#34;http://www.ctan.org/pkg/media9&#34;&gt;media9&lt;/a&gt; tex package. For this to work you need to have the latest version of texlive (or miktex). Then, it&amp;#8217;s quite straight forward to include the video. The issue is that you have to open the pdf with Acrobat Reader 10+ (9 something works. I think that it&amp;#8217;s 9.4.1+ but well, the point is that you need an updated version). You will also need a live web connection to actually show the video. An alternative (if you have the video file) is to convert it to swf and embed it. &lt;/p&gt;
&lt;p&gt;Here is my &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video.tex&#34;&gt;tex&lt;/a&gt; example file with the corresponding &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video.pdf&#34;&gt;pdf&lt;/a&gt; output compiled using pdflatex. Remember that you need Acrobat Reader to actually see the video in the pdf.&lt;/p&gt;
&lt;p&gt;After doing this, I just wanted to make some quick examples on how you can add a video to an html report using markdown (well, you add the video itself using html). I did it via &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt; and &lt;a href=&#34;http://www.rstudio.com/&#34;&gt;Rstudio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Example &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_report.Rmd&#34;&gt;Rmd&lt;/a&gt; file with corresponding &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_report.md&#34;&gt;md&lt;/a&gt; and &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_report.html&#34;&gt;html&lt;/a&gt; * outputs from &amp;#8220;knit HTML&amp;#8221; in Rstudio.&lt;/p&gt;
&lt;p&gt;Finally, the more interesting thing you can do is an html presentation which requires &lt;a href=&#34;http://johnmacfarlane.net/pandoc/&#34;&gt;pandoc&lt;/a&gt;. Again, I used knitr to get things started and, while at it, add some R and math.&lt;/p&gt;
&lt;p&gt;Example &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_web_slides.Rmd&#34;&gt;Rmd&lt;/a&gt; file with corresponding &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_web_slides.md&#34;&gt;md&lt;/a&gt; and &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_web_slides.html&#34;&gt;html&lt;/a&gt; * output from &amp;#8220;knit HTML&amp;#8221; in Rstudio. The slides are created from the md file using pandoc into this &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/misc/video_in_beamer/video_in_web_slides_pre.html&#34;&gt;html&lt;/a&gt; ** file (main output in this case). &lt;/p&gt;
&lt;p&gt;Hopefully they&amp;#8217;ll be useful to anyone venturing into embedding youtube videos in their presentations.&lt;/p&gt;
&lt;p&gt;* These two files are very similar.&lt;/p&gt;
&lt;p&gt;** html presentation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R and Biostatistics (2012 version): presentation</title>
      <link>http://lcolladotor.github.io/2012/11/12/Introduction-to-R-and-Biostatistics-2012-version/</link>
      <pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/11/12/Introduction-to-R-and-Biostatistics-2012-version/</guid>
      <description>&lt;p&gt;To follow my &lt;a href=&#34;http://fellgernon.tumblr.com/post/34677935591/introducing-r-and-biostatistics-to-first-year-lcg#.UKFlW-Oe918&#34;&gt;Introducing R and Biostatistics to first year LCG students (2012 version)&lt;/a&gt; post,  you can now find the presentation online from my site either in &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/lcg/introR2012/intro_R_Biostat_LCG_2012_slides.html&#34;&gt;presentation format&lt;/a&gt;, in a &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/lcg/introR2012/intro_R_Biostat_LCG_2012.html&#34;&gt;single webpage format&lt;/a&gt;, or the &lt;a href=&#34;http://www.biostat.jhsph.edu/~lcollado/lcg/introR2012/intro_R_Biostat_LCG_2012.Rmd&#34;&gt;raw Rmd file&lt;/a&gt;. To prove the point that publishing to &lt;a href=&#34;http://rpubs.com/&#34;&gt;RPubs&lt;/a&gt; is super easy, you can also find the &lt;a href=&#34;http://rpubs.com/lcollado/2618&#34;&gt;single webpage format over there&lt;/a&gt;. I also like how you can comment and share in RPubs.&lt;/p&gt;
&lt;p&gt;One of the challenges of giving a presentation to first year students is finding the balance between introducing them to cool things you are doing in your work and actually giving a talk that they can follow. I thought about this and ended dropping anything related to my work.&lt;/p&gt;
&lt;p&gt;My presentation was split pretty much in two parts. First, I wanted to promote some philosophical discussion about what is statistics. Second, I gave a brief overview of what you can do with R. Or more exactly, what they should be able to learn to do even if they become &lt;em&gt;wet &lt;/em&gt;biologists.&lt;/p&gt;
&lt;p&gt;While planning this presentation, I knew that I wanted to give the new students a flavor of the three different currents in statistics. I aimed to improve &lt;a href=&#34;http://fellgernon.tumblr.com/post/13739343319/introducing-biostatistics-to-first-year-lcg-students#.UKFl6uOe918&#34;&gt;my 2011 explanations&lt;/a&gt; now that I&amp;#8217;m taking the Foundations of Statistical Inference course. I&amp;#8217;m happy with the result and I think this is greatly due to Royall&amp;#8217;s diagnostic test example.&lt;/p&gt;
&lt;p&gt;Another key point that I wanted to emphasize was that RStudio is the way to go if you are new to R. It is very straightforward to use, plus it is nicely interegrated with &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I decided to use R Markdown (Rmd) for the first time, after seeing how easy &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; really is compared to using LaTeX and Beamer. However, when it got to doing the presentation I have to say that I was a bit dissapointed by how some things just break when using the R Markdown to Markdown to HTML presentation pipeline —using &lt;a href=&#34;http://johnmacfarlane.net/pandoc/&#34;&gt;pandoc&lt;/a&gt; for the last step. For example, the math breaks when using mathml or mathjax at times (like after adding an iframe for a youtube video), so I had to use webtex which doesn&amp;#8217;t look as nice.&lt;/p&gt;
&lt;p&gt;If you are interested in the commands, I used the &amp;#8220;Knit HTML&amp;#8221; button in R Studio [equivalent to running from R: &lt;em&gt;library(knitr); knit(&amp;#8220;filename.Rmd&amp;#8221;)&lt;/em&gt;] and then ran the following command:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;pandoc -s -S &amp;#8212;webtex -i -t dzslides intro_R_Biostat_LCG_2012.md -o intro_R_Biostat_LCG_2012_slides.html &amp;amp; open intro_R_Biostat_LCG_2012_slides.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I was originally aiming to have a single Rmd file to produce an HTML presentation and a Beamer presentation. However, controlling the pictures in the Beamer output proved to be challenging. While I had a work around, the final problem was the math part. By the time I realized this it was too late —I just dropped the Beamer presentation. Googling, even the author of knitr acknowledges that the best input for PDF output is still LaTeX.&lt;/p&gt;
&lt;p&gt;In the end, I&amp;#8217;m happy that I got the HTML presentation done using R Markdown and briefly introduced it to the first year students. The basics of knitr are very easy to learn and I&amp;#8217;m hoping that it got some of them curious enough to try it.&lt;/p&gt;
&lt;p&gt;Next thing in line: prepare 5 questions for the students.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
